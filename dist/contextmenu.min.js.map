{"version":3,"sources":["webpack://ContextMenu/webpack/bootstrap","webpack://ContextMenu/./node_modules/classlist-polyfill/src/index.js","webpack://ContextMenu/./node_modules/custom-event-polyfill/polyfill.js","webpack://ContextMenu/./src/js/classes/ContextMenu.js","webpack://ContextMenu/./src/js/classes/EventHandler.js","webpack://ContextMenu/./src/js/classes/EventListener.js","webpack://ContextMenu/./src/js/classes/Helper.js","webpack://ContextMenu/./src/js/classes/Html5Builder.js","webpack://ContextMenu/./src/js/classes/ItemTypes.js","webpack://ContextMenu/./src/js/classes/Operations.js","webpack://ContextMenu/./src/js/contextmenu.js","webpack://ContextMenu/./src/js/defaults/index.js","webpack://ContextMenu/./src/js/defaults/position.js","webpack://ContextMenu/./src/js/polyfills/element-matches.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","self","document","createElement","createElementNS","view","elemCtrProto","Element","objCtr","strTrim","String","trim","this","replace","arrIndexOf","Array","indexOf","item","len","length","DOMEx","type","message","code","DOMException","checkTokenAndGetIndex","classList","token","test","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","arguments","updated","remove","index","splice","toggle","force","result","method","join","classListPropDesc","configurable","ex","undefined","number","__defineGetter__","testElement","createMethod","original","DOMTokenList","_toggle","ce","CustomEvent","cancelable","preventDefault","defaultPrevented","e","event","params","evt","origPrevent","bubbles","detail","createEvent","initCustomEvent","Event","ContextMenu","_classCallCheck","html5builder","Html5Builder","defaults","handler","EventHandler","operations","Operations","namespaces","initialized","menus","counter","operation","options","normalizedArguments","normalizeArguments","update","destroy","html5","buildOptions","body","$","each","id","contextMenu","selector","items","fromMenu","css","_this","$visibleMenu","_hasContext","context","keys","forEach","is","filter","data","contextMenuRoot","$trigger","find","EventListener","triggerEvent","removeListeners","$menu","getVisibleMenus","namespace","layer","getElementById","parentNode","removeChild","querySelectorAll","$currentTrigger","match","build","isEmptyObject","listeners","baseElement","trigger","itemClick","itemClickEvent","on","hideMenu","prevItem","nextItem","abortevent","menuMouseleave","menuMouseenter","focusItem","blurItem","itemMouseleave","itemMouseenter","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","manager","first","contextMenuData","inputs","selected","radio","$input","val","prop","el","eventName","dispatchEvent","element","Helper","isVisible","_this3","values","destruct","hoveract","stopImmediatePropagation","$this","_contextMenuData","originalEvent","mouseButton","built","console","error","log","showMenu","visible","show","pageX","pageY","button","removeData","$related","relatedTarget","closest","clearTimeout","timer","root","x","y","fakeClick","target","offset","setTimeout","$window","triggerAction","elementFromPoint","$layer","hide","scrollLeft","scrollTop","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","hideOnSecondTrigger","reposition","position","top","left","bottom","outerHeight","right","outerWidth","one","currentMenuData","isInput","stopPropagation","rootMenuData","zIndex","targetZIndex","getZIndexOfTriggerTarget","style","offsetParent","parentElement","parseInt","keyCode","keyStop","shiftKey","$selected","blur","parent","hasClass","$parent","itemdata","children","classNames","disabled","notSelectable","k","fromCharCode","toUpperCase","accesskeys","$node","$s","$children","$prev","prev","last","$round","focus","$next","next","hovering","contextMenuKey","callback","selectableSubMenu","callbacks","$elements","addClass","hover","not","removeClass","isEqualNode","positionSubmenu","autoHide","NOT_CAPTURED_EVENTS","instanceId","events","eventData","_onEvent","useCapture","removeEventListener","eventsMap","addEventListener","isPropagationStopped","toLowerCase","matchesSelector","_extraContextMenuData","callAll","offsetWidth","offsetHeight","getClientRects","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","$t","zin","$tt","Math","max","charAt","node","builder","nodeName","label","text","attr","icon","inputLabel","html","clone","simple","textarea","checkbox","select","separator","submenu","menuData","additionalZValue","zindex","animation","duration","activated","off","contextMenuAutoHide","pos","_typeof","menuElement","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","appendTo","_afterAccesskey","isHtmlName","accesskey","className","$label","noop","ItemTypes","ak","aks","splitAccesskey","matched","RegExp","types","commands","hasTypes","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","ceil","width","minWidth","maxWidth","resize","addBack","hasVisibleItems","$item","z-index","opacity","background-color","insertBefore","layerClick","promise","finishPromiseProcess","iconLoadingClass","errorPromise","errorItem","$menuOffset","winHeight","winScrollTop","menuHeight","overflow-x","overflow-y","ContextMenuItemTypes","_position","delay","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","determinePosition","ui","my","at","of","collision","offsetParentOffset"],"mappings":"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","file":"contextmenu.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/contextmenu.js\");\n","/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20170427\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in window.self) {\n\n// Full polyfill for browsers with no classList support\n// Including IE < Edge missing SVGElement.classList\nif (!(\"classList\" in document.createElement(\"_\")) \n\t|| document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nif (!('Element' in view)) return;\n\nvar\n\t  classListProp = \"classList\"\n\t, protoProp = \"prototype\"\n\t, elemCtrProto = view.Element[protoProp]\n\t, objCtr = Object\n\t, strTrim = String[protoProp].trim || function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\tvar\n\t\t\t  i = 0\n\t\t\t, len = this.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tif (i in this && this[i] === item) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t// Vendors: please allow content code to instantiate DOMExceptions\n\t, DOMEx = function (type, message) {\n\t\tthis.name = type;\n\t\tthis.code = DOMException[type];\n\t\tthis.message = message;\n\t}\n\t, checkTokenAndGetIndex = function (classList, token) {\n\t\tif (token === \"\") {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t);\n\t\t}\n\t\tif (/\\s/.test(token)) {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t, \"String contains an invalid character\"\n\t\t\t);\n\t\t}\n\t\treturn arrIndexOf.call(classList, token);\n\t}\n\t, ClassList = function (elem) {\n\t\tvar\n\t\t\t  trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t, i = 0\n\t\t\t, len = classes.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tthis.push(classes[i]);\n\t\t}\n\t\tthis._updateClassName = function () {\n\t\t\telem.setAttribute(\"class\", this.toString());\n\t\t};\n\t}\n\t, classListProto = ClassList[protoProp] = []\n\t, classListGetter = function () {\n\t\treturn new ClassList(this);\n\t}\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n\treturn this[i] || null;\n};\nclassListProto.contains = function (token) {\n\ttoken += \"\";\n\treturn checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.remove = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t\t, index\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tindex = checkTokenAndGetIndex(this, token);\n\t\twhile (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tupdated = true;\n\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.toggle = function (token, force) {\n\ttoken += \"\";\n\n\tvar\n\t\t  result = this.contains(token)\n\t\t, method = result ?\n\t\t\tforce !== true && \"remove\"\n\t\t:\n\t\t\tforce !== false && \"add\"\n\t;\n\n\tif (method) {\n\t\tthis[method](token);\n\t}\n\n\tif (force === true || force === false) {\n\t\treturn force;\n\t} else {\n\t\treturn !result;\n\t}\n};\nclassListProto.toString = function () {\n\treturn this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n\tvar classListPropDesc = {\n\t\t  get: classListGetter\n\t\t, enumerable: true\n\t\t, configurable: true\n\t};\n\ttry {\n\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t// adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n\t\t// modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n\t\tif (ex.number === undefined || ex.number === -0x7FF5EC54) {\n\t\t\tclassListPropDesc.enumerable = false;\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t}\n\t}\n} else if (objCtr[protoProp].__defineGetter__) {\n\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(window.self));\n\n}\n\n// There is full or partial native classList support, so just check if we need\n// to normalize the add/remove and toggle APIs.\n\n(function () {\n\t\"use strict\";\n\n\tvar testElement = document.createElement(\"_\");\n\n\ttestElement.classList.add(\"c1\", \"c2\");\n\n\t// Polyfill for IE 10/11 and Firefox <26, where classList.add and\n\t// classList.remove exist but support only one argument at a time.\n\tif (!testElement.classList.contains(\"c2\")) {\n\t\tvar createMethod = function(method) {\n\t\t\tvar original = DOMTokenList.prototype[method];\n\n\t\t\tDOMTokenList.prototype[method] = function(token) {\n\t\t\t\tvar i, len = arguments.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttoken = arguments[i];\n\t\t\t\t\toriginal.call(this, token);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tcreateMethod('add');\n\t\tcreateMethod('remove');\n\t}\n\n\ttestElement.classList.toggle(\"c3\", false);\n\n\t// Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n\t// support the second argument.\n\tif (testElement.classList.contains(\"c3\")) {\n\t\tvar _toggle = DOMTokenList.prototype.toggle;\n\n\t\tDOMTokenList.prototype.toggle = function(token, force) {\n\t\t\tif (1 in arguments && !this.contains(token) === !force) {\n\t\t\t\treturn force;\n\t\t\t} else {\n\t\t\t\treturn _toggle.call(this, token);\n\t\t\t}\n\t\t};\n\n\t}\n\n\ttestElement = null;\n}());\n\n}\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","import Operations from './Operations';\nimport defaults from '../defaults';\nimport Html5Builder from './Html5Builder';\nimport EventHandler from './EventHandler';\nimport EventListener from './EventListener';\nimport Helper from './Helper';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {EventHandler} handle\n     * @property {Operations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new Html5Builder();\n        this.defaults = defaults;\n        this.handler = new EventHandler();\n        this.operations = new Operations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n\n        // todo Context is deprecated in jQuery, perhaps just remove this way?\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu request to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    EventListener.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n                }\n\n                this.removeListeners(o.ns);\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                // todo JQuery?\n                // $(o.context).off(o.ns);\n\n                return true;\n            });\n        } else if (!options.selector) {\n            // todo JQuery?\n            // $(document).off('.contextMenu .contextMenuAutoHide');\n\n            this.removeListeners();\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            let layer = document.getElementById('context-menu-layer');\n            if (layer) {\n                layer.parentNode.removeChild(layer);\n            }\n\n            let contextMenus = document.querySelectorAll('.context-menu-list');\n            contextMenus.forEach(function (e) {\n                e.parentNode.removeChild(e);\n            });\n        } else if (this.namespaces[options.selector]) {\n            let visibleMenus = this.getVisibleMenus();\n            visibleMenus.forEach(function (e) {\n                // todo Should we check for correct menu? $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)\n                EventListener.triggerEvent(e, 'contextmenu:hide', {force: true});\n            });\n\n            let namespace = this.namespaces[options.selector];\n\n            this.removeListeners(namespace);\n\n            if (this.menus[namespace].$menu) {\n                this.menus[namespace].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            // not needed\n            // $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        if (typeof options.listeners === 'undefined') {\n            options.listeners = {\n                baseElement: new EventListener(document, options)\n            };\n        }\n\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\n\n            // make sure item click is registered first\n            options.listeners.baseElement\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave)\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter);\n\n            options.listeners.baseElement\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave)\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter);\n\n            options.listeners.baseElement.on('mouseup', '.context-menu-input', this.handler.inputClick);\n\n            this.initialized = true;\n        }\n\n        if (options._hasContext) {\n            options.listeners.context = new EventListener(options.context.get(0), options);\n        } else {\n            options.listeners.context = options.listeners.baseElement;\n        }\n\n        // engage native contextmenu event\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.listeners.context\n                    .on('mouseenter', options.selector, this.handler.mouseenter)\n                    .on('mouseleave', options.selector, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.listeners.context.on('click', options.selector, this.handler.click);\n                break;\n            case 'touchstart':\n                options.listeners.context.on('touchstart', options.selector, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    getVisibleMenus() {\n        return Array.prototype.filter.call(document.querySelectorAll('.context-menu-list'), (element) => {\n            return Helper.isVisible(element)\n        });\n    }\n\n    /**\n     * Removes all event listner\n     *\n     * @param {string?} namespace Namespace of the contextmenu to destroy, no value means all\n     */\n    removeListeners(namespace) {\n        let namespaces = [namespace];\n        if (!namespace) {\n            namespaces = Object.values(this.namespaces);\n        }\n\n        namespaces.forEach((ns) => {\n            if (this.menus[ns] && this.menus[ns].listeners) {\n                Object.keys(this.menus[ns].listeners).forEach((key) => {\n                    this.menus[ns].listeners[key].destruct();\n                });\n            }\n        });\n    }\n\n    getMenuBySelector(selector) {\n        return Object.values(this.menus).find((menu) => menu.selector === selector);\n    }\n}\n","import defaults from '../defaults';\nimport EventListener from './EventListener'\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} _contextMenuData\n */\n\nexport default class EventHandler {\n    /**\n     * @constructs EventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(this);\n\n        if (!e._contextMenuData) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e._contextMenuData.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e._contextMenuData.trigger !== 'right' && e._contextMenuData.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e._contextMenuData.trigger === 'left' && e.mouseButton === 0) && !(e._contextMenuData.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if (this.classList.contains('context-menu-active')) {\n            return;\n        }\n\n        if (!this.classList.contains('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e._contextMenuData.$menu.trigger(evt);\n\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            if (e._contextMenuData.build) {\n                const built = e._contextMenuData.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e._contextMenuData = $.extend(true, {}, defaults, e._contextMenuData, built || {});\n\n                // abort if there are no items to display\n                if (!e._contextMenuData.items || $.isEmptyObject(e._contextMenuData.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e._contextMenuData.$trigger = e._contextMenuData.manager.handler.$currentTrigger;\n\n                e._contextMenuData.manager.operations.create(e, e._contextMenuData);\n            }\n            let showMenu = false;\n\n            Object.keys(e._contextMenuData.items).forEach((key) => {\n                let visible;\n                if (typeof e._contextMenuData.items[key].visible === 'function') {\n                    visible = e._contextMenuData.items[key].visible.call($this, e, key, e._contextMenuData, e._contextMenuData);\n                } else if (typeof e._contextMenuData.items[key].visible !== 'undefined') {\n                    visible = e._contextMenuData.items[key].visible === true;\n                } else {\n                    visible = true;\n                }\n                if (visible) {\n                    showMenu = true;\n                }\n            });\n\n            if (showMenu) {\n                // show menu\n                e._contextMenuData.manager.operations.show.call($this, e, e._contextMenuData, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && !e._contextMenuData.manager.handler.$currentTrigger.is($this)) {\n            EventListener.triggerEvent(e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e._contextMenuData, originalEvent: e});\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e._contextMenuData.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && e._contextMenuData.manager.handler.$currentTrigger.is($this) && !this.classList.contains('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        // @todo const $this = $(this);\n        const $related = $(e.relatedTarget);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n        e._contextMenuData.manager.handler.hoveract.data = e._contextMenuData;\n\n        // todo: auto hide delay?\n        // console.log('========== temp mouseenter');\n        // let eventListener = new EventListener(document, e._contextMenuData);\n        // eventListener.on('mousemove', e._contextMenuData.manager.handler.mousemove);\n        // e._contextMenuData.manager.handler.hoveract.timer = setTimeout(() => {\n        //     e._contextMenuData.manager.handler.hoveract.timer = null;\n        //     eventListener.off('mousemove');\n        //     eventListener.destruct();\n        //     eventListener = null;\n        //     e._contextMenuData.manager.handler.$currentTrigger = $this;\n        //     e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {\n        //         data: e._contextMenuData.manager.handler.hoveract.data,\n        //         pageX: e._contextMenuData.manager.handler.hoveract.pageX,\n        //         pageY: e._contextMenuData.manager.handler.hoveract.pageY\n        //     });\n        // }, e._contextMenuData.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e._contextMenuData.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e._contextMenuData.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        /** @var ContextMenuData **/\n        let root = e._contextMenuData;\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let fakeClick = x === undefined;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            if (fakeClick) {\n                if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                    root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                }\n                return;\n            }\n\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                EventListener.triggerEvent(target, e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e._contextMenuData.manager.handler.$currentTrigger) {\n            rootMenuData = e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, true);\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    EventListener.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e}, false);\n                    // @todo weird event?\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {\n                        data: rootMenuData,\n                        originalEvent: e\n                    }, false);\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.get(0).dispatchEvent(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                break;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = e._contextMenuData;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = e._contextMenuData;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        console.log('itemmouseenter');\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        // @todo let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n\n        if (this.classList.contains(rootMenuData.classNames.disabled) || this.classList.contains(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        e.stopPropagation();\n        EventListener.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e}, true);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                console.log('blur itemmouseleave?');\n                // todo handled somewhere else?\n                // rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, false);\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            // todo unneeded?\n            // return;\n        }\n\n        // @todo unneeded?\n        // if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n        //     return;\n        // }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        // e.stopPropagation();\n\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (this.classList.contains(rootMenuData.classNames.disabled) || this.classList.contains(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        let $elements = $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent()\n            .find('> .context-menu-item')\n            .not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover);\n\n        if ($elements.length > 0) {\n            // Blur other elements in this menu\n            $elements.each(function (i, element) {\n                if (!element.isEqualNode(e.target)) {\n                    EventListener.triggerEvent(element, 'contextmenu:blur', {data: currentMenuData}, true);\n                }\n            });\n        }\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n            currentMenuData.$node.addClass(rootMenuData.classNames.visible);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            if (currentMenuData.$node.get(0).isEqualNode(e.target)) {\n                // currentMenuData.$node.addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '));\n                rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        // e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n","'use strict';\nimport Helper from './Helper';\n\nconst NOT_CAPTURED_EVENTS = [];// ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\n\n/**\n * Listens to events dispatched to an element or its children.\n *\n * @param {Element} el The element to listen to.\n * @param {ContextMenuData} contextMenuData ContextMenuData of menu this is bound to\n * @param {Element} context Optional context in which to execute the callbacks.\n */\nclass EventListener {\n    constructor(el, contextMenuData) {\n        if (!window.instanceId) {\n            window.instanceId = 0;\n        }\n        this.instanceId = window.instanceId++;\n\n        this.contextMenuData = contextMenuData || null;\n        this.el = el;\n        this.events = {};\n        this.eventData = {};\n        this._onEvent = this._onEvent.bind(this);\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    static triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    /**\n     * Destructor.\n     *\n     * Removes all event listeners and cleans up all references.\n     */\n    destruct() {\n        if (this.events !== null) {\n            Object.keys(this.events).forEach(function (eventName) {\n                // let useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n                let useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n                this.el.removeEventListener(eventName, this._onEvent, useCapture);\n            }, this);\n        }\n\n        this.context = null;\n        this.contextMenuData = null;\n        this.el = null;\n        this.events = null;\n        this.eventData = null;\n    }\n\n    /**\n     * Stops listening to an event.\n     *\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\n     * given event and class are discarded.\n     * @param {string} eventName\n     * @param {string?} selector\n     * @param {Function?} callback\n     *\n     * @returns {EventListener}\n     */\n    off(eventName, selector, callback) {\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (callback) {\n            let events = this.events[eventName];\n            if (events) {\n                events = events[selector];\n                if (events) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (events[i] === callback) {\n                            events.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        } else {\n            if (this.events.hasOwnProperty(eventName) && this.events[eventName].hasOwnProperty(selector)) {\n                this.events[eventName][selector] = [];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Starts listening to an event.\n     *\n     * @param {string} eventName Name of the event to listen to, in lower-case.\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\n     *                 the selector are caught.\n     * @param {Function} callback Callback to invoke when the event is caught.\n     *\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\n     * Selectors may be specified by separating them from the event name with a space. For example:\n     *\n     *     .on({\n     *         'blur': this._blurred,\n     *         'click .some-input': this._inputClicked,\n     *     })\n     * @param {Object} data\n     * @return {this}\n     */\n    on(eventName, selector, callback, data = false) {\n        if (typeof eventName !== 'string') {\n            const eventsMap = eventName;\n            for (let key in eventsMap) {\n                if (eventsMap.hasOwnProperty(key)) {\n                    const split = key.split(' ');\n                    if (split.length > 1) {\n                        this.on(split[0], split[1], eventsMap[key], data);\n                    } else {\n                        this.on(split[0], '', eventsMap[key], data);\n                    }\n                }\n            }\n            return this;\n        }\n\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (!this.events.hasOwnProperty(eventName)) {\n            const useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\n\n            this.events[eventName] = {};\n        }\n\n        if (!this.events[eventName].hasOwnProperty(selector)) {\n            this.events[eventName][selector] = [];\n        }\n\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\n            this.events[eventName][selector].push(callback);\n        }\n\n        if (data) {\n            if (!this.eventData.hasOwnProperty(eventName)) {\n                this.eventData[eventName] = {};\n            }\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\n                this.eventData[eventName][selector] = data;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onEvent(event) {\n        let isPropagationStopped = false;\n        let stopPropagation = event.stopPropagation;\n        event.stopPropagation = function () {\n            stopPropagation.call(event);\n            isPropagationStopped = true;\n        };\n\n        if (event.detail && event.detail.data) {\n            event._contextMenuData = event.detail.data;\n        } else {\n            event._contextMenuData = this.contextMenuData;\n        }\n\n        let target = event.target;\n\n        const events = this.events[event.type.toLowerCase()];\n        const eventData = this.eventData[event.type.toLowerCase()];\n\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target && target !== this.el && isPropagationStopped === false) {\n            for (let selector in events) {\n                if (\n                    selector && eventData && eventData.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    event._extraContextMenuData = eventData[selector];\n                }\n\n                if (selector && events.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    this.context = target;\n                    EventListener.callAll(events[selector], event, this.context);\n                }\n            }\n            target = target.parentElement;\n            if (isPropagationStopped === true) {\n                break;\n            }\n        }\n\n        if (isPropagationStopped === false && events.hasOwnProperty('')) {\n            EventListener.callAll(events[''], event, this.context);\n        }\n    }\n\n    static callAll(callbacks, event, context) {\n        for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i].call(context, event);\n        }\n    }\n}\n\nmodule.exports = EventListener;\n","/**\n * @class Helper\n * @classdesc Few helper static functions\n */\nexport default class Helper {\n    /**\n     * @param elem\n     * @returns {boolean}\n     */\n    static isVisible(elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    }\n\n    /**\n     * @param el\n     * @param selector\n     * @returns {boolean}\n     */\n    static matchesSelector(el, selector) {\n        const method =\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n        return method.call(el, selector);\n    }\n\n    /**\n     * Calculates zIndex of an element\n     * @memberOf Helper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf Helper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n","/**\n * @class Html5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class Html5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element or selector to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ItemTypes|string} type - Specifies the type of the command. See {@link ItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {Object<string, EventListener>} listeners - EventListener on this item.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ItemTypes;\n","import Helper from './Helper';\nimport ItemTypes from './ItemTypes';\nimport EventListener from './EventListener';\n\nexport default class Operations {\n    /**\n     * @constructor\n     * @constructs Operations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(e.target);\n        const css = {};\n\n        // hide any open menus\n        let layer = document.getElementById('#context-menu-layer');\n        if (layer) {\n            EventListener.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\n        }\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        let hasVisibleItems = menuData.manager.operations.update.call($trigger, e, menuData);\n\n        if (hasVisibleItems === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = Helper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            EventListener.triggerEvent($trigger.get(0), 'contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        menuData.listeners.baseElement.off('keydown').on('keydown', menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            // @todo this overwrites mousemove?\n            menuData.listeners.contextMenuAutoHide.on('mousemove', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n\n        // remove selected @todo trigger multiple?\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        if (menuData.listeners.contextMenuAutoHide) {\n            menuData.listeners.contextMenuAutoHide.destruct();\n        }\n        menuData.listeners.baseElement.off('keydown');\n\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {}\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    EventListener.triggerEvent($trigger.get(0), 'contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        let menuElement = document.createElement('ul');\n        menuElement.className = 'context-menu-list ' + (currentMenuData.className || '');\n\n        currentMenuData.menuElement = menuElement;\n        menuElement.contextMenu = currentMenuData;\n        menuElement.contextMenuRoot = currentMenuData;\n\n        currentMenuData.$menu = $(menuElement).addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        // create contextMenu\n        // currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n        //     'contextMenu': currentMenuData,\n        //     'contextMenuRoot': rootMenuData\n        // });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            if (typeof item.listeners === 'undefined') {\n                item.listeners = {};\n            }\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = Helper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ItemTypes.separator:\n                        break;\n\n                    case ItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        $t.addClass('item-submenu-' + item.name.replace(/\\s+/g, '-').toLowerCase());\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        $t.addClass('item-command-' + item.name.replace(/\\s+/g, '-').toLowerCase());\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ItemTypes.submenu && item.type !== ItemTypes.html && item.type !== ItemTypes.separator) {\n                    item.listeners.input = new EventListener($input.get(0), rootMenuData);\n                    item.listeners.input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        item.listeners.input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                // @todo what event?\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e._contextMenuData.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     *\n     * @return {boolean} hasVisibleItems\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n\n        let hasVisibleItems = false;\n\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n\n            if (visible) {\n                hasVisibleItems = true;\n            }\n\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ItemTypes.text:\n                    case ItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ItemTypes.checkbox:\n                    case ItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                let subMenuHasVisibleItems = rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n                if (subMenuHasVisibleItems) {\n                    hasVisibleItems = true;\n                }\n            }\n        });\n\n        return hasVisibleItems;\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this);\n\n        menuData.listeners.layer = new EventListener($layer.get(0), menuData);\n        menuData.listeners.layer\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ItemTypes from './classes/ItemTypes';\n// import elementFunction from './jquery/contextMenu';\nimport './polyfills/element-matches';\nimport 'custom-event-polyfill';\nimport 'classlist-polyfill';\n\n//\n// /**\n//  * The jQuery namespace.\n//  * @external \"jQuery\"\n//  * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n//  */\n//\n// /**\n//  * @class jQuery.contextMenu\n//  * @function external:jQuery.contextMenu\n//  * @instance\n//  *\n//  * @param {string} operation\n//  * @param {ContextMenuOptions} options\n//  *\n//  * @property {ContextMenu} manager\n//  * @property {getInputValues} getInputValues\n//  * @property {setInputValues} setInputValues\n//  * @property {fromMenu} Html5Builder#fromMenu\n//  * @property {ContextMenuOptions} defaults\n//  * @property {EventHandler} handle\n//  * @property {Operations} operations\n//  * @property {Object<string, ContextMenuData>} menus\n//  */\n// const manager = new ContextMenu();\n//\n// // manage contextMenu instances\n// let contextMenu = function (operation, options) {\n//     manager.execute(operation, options);\n// };\n//\n// contextMenu.getInputValues = function (currentMenuData, data) {\n//     return manager.getInputValues(currentMenuData, data);\n// };\n// contextMenu.setInputValues = function (currentMenuData, data) {\n//     return manager.getInputValues(currentMenuData, data);\n// };\n// contextMenu.fromMenu = function (element) {\n//     return manager.html5builder.fromMenu(element);\n// };\n//\n// // make defaults accessible\n// contextMenu.defaults = manager.defaults;\n// contextMenu.types = manager.defaults.types;\n// contextMenu.manager = manager;\n//\n// // export internal functions - undocumented, for hacking only!\n// contextMenu.handle = manager.handler;\n// contextMenu.operations = manager.operations;\n// contextMenu.menus = manager.menus;\n// contextMenu.namespaces = manager.namespaces;\n//\n// $.fn.contextMenu = elementFunction;\n// $.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes: ItemTypes};\n","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {HTMLElement} menuElement - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n * @property {Object<string, EventListener>} listeners - All defined EventListener for this menu\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|HTMLElement} [appendTo=document.body] - Specifies the selector `string` or `HTMLElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {HTMLElement} baseElement - The base element which should listen to events, by default this is `document`.\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n\n    baseElement: document,\n\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n"],"sourceRoot":""}