{"version":3,"sources":["webpack://ContextMenu/webpack/bootstrap","webpack://ContextMenu/./node_modules/custom-event-polyfill/polyfill.js","webpack://ContextMenu/./src/js/classes/ContextMenu.js","webpack://ContextMenu/./src/js/classes/EventHandler.js","webpack://ContextMenu/./src/js/classes/EventListener.js","webpack://ContextMenu/./src/js/classes/Helper.js","webpack://ContextMenu/./src/js/classes/Html5Builder.js","webpack://ContextMenu/./src/js/classes/ItemTypes.js","webpack://ContextMenu/./src/js/classes/Operations.js","webpack://ContextMenu/./src/js/contextmenu.js","webpack://ContextMenu/./src/js/defaults/index.js","webpack://ContextMenu/./src/js/defaults/position.js","webpack://ContextMenu/./src/js/jquery/contextMenu.js","webpack://ContextMenu/./src/js/polyfills/element-matches.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","ce","CustomEvent","cancelable","preventDefault","defaultPrevented","Error","e","event","params","evt","origPrevent","bubbles","detail","undefined","document","createEvent","initCustomEvent","this","Event","ContextMenu","_classCallCheck","html5builder","Html5Builder","defaults","handler","EventHandler","operations","Operations","namespaces","initialized","menus","counter","operation","options","normalizedArguments","normalizeArguments","update","destroy","html5","buildOptions","body","$","each","id","contextMenu","selector","items","fromMenu","css","_this","$visibleMenu","_hasContext","context","keys","forEach","is","filter","length","data","contextMenuRoot","$trigger","find","EventListener","triggerEvent","force","removeListeners","$menu","remove","getVisibleMenus","namespace","layer","getElementById","parentNode","removeChild","querySelectorAll","$currentTrigger","match","build","isEmptyObject","listeners","trigger","itemClick","itemClickEvent","on","hideMenu","prevItem","nextItem","abortevent","menuMouseleave","menuMouseenter","focusItem","blurItem","itemMouseleave","itemMouseenter","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","manager","first","contextMenuData","inputs","item","type","selected","radio","$input","val","prop","el","eventName","arguments","dispatchEvent","Array","element","Helper","isVisible","_this3","values","destruct","hoveract","stopImmediatePropagation","$this","_contextMenuData","originalEvent","mouseButton","hasClass","built","console","error","log","showMenu","visible","show","pageX","pageY","button","removeData","$related","relatedTarget","closest","clearTimeout","timer","root","x","y","fakeClick","target","offset","setTimeout","$window","triggerAction","elementFromPoint","$layer","hide","scrollLeft","scrollTop","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","hideOnSecondTrigger","reposition","position","top","left","bottom","outerHeight","right","outerWidth","one","currentMenuData","isInput","stopPropagation","rootMenuData","zIndex","targetZIndex","getZIndexOfTriggerTarget","style","offsetParent","parentElement","parseInt","keyCode","keyStop","shiftKey","$selected","blur","parent","$parent","itemdata","children","classNames","disabled","notSelectable","k","String","fromCharCode","toUpperCase","accesskeys","$node","$s","$children","$prev","prev","last","$round","focus","$next","next","hovering","contextMenuKey","callback","selectableSubMenu","callbacks","$elements","addClass","hover","join","not","removeClass","isEqualNode","positionSubmenu","autoHide","NOT_CAPTURED_EVENTS","instanceId","events","eventData","_onEvent","useCapture","indexOf","removeEventListener","splice","eventsMap","split","addEventListener","push","isPropagationStopped","toLowerCase","matchesSelector","_extraContextMenuData","callAll","elem","offsetWidth","offsetHeight","getClientRects","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","$t","zin","$tt","Math","max","charAt","node","builder","nodeName","label","text","attr","icon","inputLabel","html","clone","simple","textarea","checkbox","select","separator","submenu","menuData","additionalZValue","zindex","animation","duration","activated","off","contextMenuAutoHide","pos","_typeof","menuElement","createElement","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","appendTo","_afterAccesskey","isHtmlName","accesskey","className","$label","noop","ItemTypes","ak","aks","splitAccesskey","matched","RegExp","types","commands","hasTypes","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","ceil","width","minWidth","maxWidth","index","resize","addBack","hasVisibleItems","$item","z-index","opacity","background-color","insertBefore","layerClick","promise","finishPromiseProcess","iconLoadingClass","errorPromise","errorItem","$menuOffset","winHeight","winScrollTop","menuHeight","overflow-x","overflow-y","execute","getInputValues","setInputValues","handle","fn","elementFunction","ContextMenuItemTypes","_position","delay","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","determinePosition","ui","my","at","of","collision","offsetParentOffset","$o","isPlainObject","Element"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/contextmenu.js\");\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","import Operations from './Operations';\nimport defaults from '../defaults';\nimport Html5Builder from './Html5Builder';\nimport EventHandler from './EventHandler';\nimport EventListener from './EventListener';\nimport Helper from './Helper';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {EventHandler} handle\n     * @property {Operations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new Html5Builder();\n        this.defaults = defaults;\n        this.handler = new EventHandler();\n        this.operations = new Operations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n\n        // todo Context is deprecated in jQuery, perhaps just remove this way?\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu equest to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    EventListener.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n                }\n\n                this.removeListeners(o.ns);\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                // todo JQuery?\n                // $(o.context).off(o.ns);\n\n                return true;\n            });\n        } else if (!options.selector) {\n            // todo JQuery?\n            // $(document).off('.contextMenu .contextMenuAutoHide');\n\n            this.removeListeners();\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            let layer = document.getElementById('context-menu-layer');\n            if (layer) {\n                layer.parentNode.removeChild(layer);\n            }\n\n            let contextMenus = document.querySelectorAll('.context-menu-list');\n            contextMenus.forEach(function (e) {\n                e.parentNode.removeChild(e);\n            });\n        } else if (this.namespaces[options.selector]) {\n            let visibleMenus = this.getVisibleMenus();\n            visibleMenus.forEach(function (e) {\n                // todo Should we check for correct menu? $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)\n                EventListener.triggerEvent(e, 'contextmenu:hide', {force: true});\n            });\n\n            let namespace = this.namespaces[options.selector];\n\n            this.removeListeners(namespace);\n\n            if (this.menus[namespace].$menu) {\n                this.menus[namespace].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            // not needed\n            // $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        if (typeof options.listeners === 'undefined') {\n            options.listeners = {\n                document: new EventListener(document, options)\n            };\n        }\n\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\n\n            // make sure item click is registered first\n            options.listeners.document\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave)\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter);\n\n            options.listeners.document\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave)\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter);\n\n            options.listeners.document.on('mouseup', '.context-menu-input', this.handler.inputClick);\n\n            this.initialized = true;\n        }\n\n        if (options._hasContext) {\n            options.listeners.context = new EventListener(options.context.get(0), options);\n        } else {\n            options.listeners.context = options.listeners.document;\n        }\n\n        // engage native contextmenu event\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.listeners.context\n                    .on('mouseenter', options.selector, this.handler.mouseenter)\n                    .on('mouseleave', options.selector, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.listeners.context.on('click', options.selector, this.handler.click);\n                break;\n            case 'touchstart':\n                options.listeners.context.on('touchstart', options.selector, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    getVisibleMenus() {\n        return Array.prototype.filter.call(document.querySelectorAll('.context-menu-list'), (element) => {\n            return Helper.isVisible(element)\n        });\n    }\n\n    /**\n     * Removes all event listner\n     *\n     * @param {string?} namespace Namespace of the contextmenu to destroy, no value means all\n     */\n    removeListeners(namespace) {\n        let namespaces = [namespace];\n        if (!namespace) {\n            namespaces = Object.values(this.namespaces);\n        }\n\n        namespaces.forEach((ns) => {\n            if (this.menus[ns] && this.menus[ns].listeners) {\n                Object.keys(this.menus[ns].listeners).forEach((key) => {\n                    this.menus[ns].listeners[key].destruct();\n                });\n            }\n        });\n    }\n\n    getMenuBySelector(selector) {\n        return Object.values(this.menus).find((menu) => menu.selector === selector);\n    }\n}\n","import defaults from '../defaults';\nimport EventListener from './EventListener'\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} _contextMenuData\n */\n\nexport default class EventHandler {\n    /**\n     * @constructs EventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(this);\n\n        if (!e._contextMenuData) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e._contextMenuData.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e._contextMenuData.trigger !== 'right' && e._contextMenuData.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e._contextMenuData.trigger === 'left' && e.mouseButton === 0) && !(e._contextMenuData.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e._contextMenuData.$menu.trigger(evt);\n\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            if (e._contextMenuData.build) {\n                const built = e._contextMenuData.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e._contextMenuData = $.extend(true, {}, defaults, e._contextMenuData, built || {});\n\n                // abort if there are no items to display\n                if (!e._contextMenuData.items || $.isEmptyObject(e._contextMenuData.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e._contextMenuData.$trigger = e._contextMenuData.manager.handler.$currentTrigger;\n\n                e._contextMenuData.manager.operations.create(e, e._contextMenuData);\n            }\n            let showMenu = false;\n\n            Object.keys(e._contextMenuData.items).forEach((key) => {\n                let visible;\n                if (typeof e._contextMenuData.items[key].visible === 'function') {\n                    visible = e._contextMenuData.items[key].visible.call($this, e, key, e._contextMenuData, e._contextMenuData);\n                } else if (typeof e._contextMenuData.items[key].visible !== 'undefined') {\n                    visible = e._contextMenuData.items[key].visible === true;\n                } else {\n                    visible = true;\n                }\n                if (visible) {\n                    showMenu = true;\n                }\n            });\n\n            if (showMenu) {\n                // show menu\n                e._contextMenuData.manager.operations.show.call($this, e, e._contextMenuData, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && !e._contextMenuData.manager.handler.$currentTrigger.is($this)) {\n            EventListener.triggerEvent(e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e._contextMenuData, originalEvent: e});\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e._contextMenuData.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && e._contextMenuData.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        // @todo const $this = $(this);\n        const $related = $(e.relatedTarget);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n        e._contextMenuData.manager.handler.hoveract.data = e._contextMenuData;\n\n        // todo: auto hide delay?\n        // console.log('========== temp mouseenter');\n        // let eventListener = new EventListener(document, e._contextMenuData);\n        // eventListener.on('mousemove', e._contextMenuData.manager.handler.mousemove);\n        // e._contextMenuData.manager.handler.hoveract.timer = setTimeout(() => {\n        //     e._contextMenuData.manager.handler.hoveract.timer = null;\n        //     eventListener.off('mousemove');\n        //     eventListener.destruct();\n        //     eventListener = null;\n        //     e._contextMenuData.manager.handler.$currentTrigger = $this;\n        //     e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {\n        //         data: e._contextMenuData.manager.handler.hoveract.data,\n        //         pageX: e._contextMenuData.manager.handler.hoveract.pageX,\n        //         pageY: e._contextMenuData.manager.handler.hoveract.pageY\n        //     });\n        // }, e._contextMenuData.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e._contextMenuData.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e._contextMenuData.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        /** @var ContextMenuData **/\n        let root = e._contextMenuData;\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let fakeClick = x === undefined;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            if (fakeClick) {\n                if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                    root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                }\n                return;\n            }\n\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                EventListener.triggerEvent(target, e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e._contextMenuData.manager.handler.$currentTrigger) {\n            rootMenuData = e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, true);\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    EventListener.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e}, false);\n                    // @todo weird event?\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {\n                        data: rootMenuData,\n                        originalEvent: e\n                    }, false);\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.get(0).dispatchEvent(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                break;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = e._contextMenuData;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = e._contextMenuData;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        console.log('itemmouseenter');\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        // @todo let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        e.stopPropagation();\n        EventListener.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e}, true);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                console.log('blur itemmouseleave?');\n                // todo handled somewhere else?\n                // rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, false);\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            // todo unneeded?\n            // return;\n        }\n\n        // @todo unneeded?\n        // if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n        //     return;\n        // }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        // e.stopPropagation();\n\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        let $elements = $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent()\n            .find('> .context-menu-item')\n            .not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover);\n\n        if ($elements.length > 0) {\n            // Blur other elements in this menu\n            $elements.each(function (i, element) {\n                if (!element.isEqualNode(e.target)) {\n                    EventListener.triggerEvent(element, 'contextmenu:blur', {data: currentMenuData}, true);\n                }\n            });\n        }\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n            currentMenuData.$node.addClass(rootMenuData.classNames.visible);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            if (currentMenuData.$node.get(0).isEqualNode(e.target)) {\n                // currentMenuData.$node.addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '));\n                rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        // e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n","'use strict';\nimport Helper from './Helper';\n\nconst NOT_CAPTURED_EVENTS = [];// ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\n\n/**\n * Listens to events dispatched to an element or its children.\n *\n * @param {Element} el The element to listen to.\n * @param {ContextMenuData} contextMenuData ContextMenuData of menu this is bound to\n * @param {Element} context Optional context in which to execute the callbacks.\n */\nclass EventListener {\n    constructor(el, contextMenuData) {\n        if (!window.instanceId) {\n            window.instanceId = 0;\n        }\n        this.instanceId = window.instanceId++;\n\n        this.contextMenuData = contextMenuData || null;\n        this.el = el;\n        this.events = {};\n        this.eventData = {};\n        this._onEvent = this._onEvent.bind(this);\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    static triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    /**\n     * Destructor.\n     *\n     * Removes all event listeners and cleans up all references.\n     */\n    destruct() {\n        if (this.events !== null) {\n            Object.keys(this.events).forEach(function (eventName) {\n                // let useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n                let useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n                this.el.removeEventListener(eventName, this._onEvent, useCapture);\n            }, this);\n        }\n\n        this.context = null;\n        this.contextMenuData = null;\n        this.el = null;\n        this.events = null;\n        this.eventData = null;\n    }\n\n    /**\n     * Stops listening to an event.\n     *\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\n     * given event and class are discarded.\n     * @param {string} eventName\n     * @param {string?} selector\n     * @param {Function?} callback\n     *\n     * @returns {EventListener}\n     */\n    off(eventName, selector, callback) {\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (callback) {\n            let events = this.events[eventName];\n            if (events) {\n                events = events[selector];\n                if (events) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (events[i] === callback) {\n                            events.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        } else {\n            if (this.events.hasOwnProperty(eventName) && this.events[eventName].hasOwnProperty(selector)) {\n                this.events[eventName][selector] = [];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Starts listening to an event.\n     *\n     * @param {string} eventName Name of the event to listen to, in lower-case.\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\n     *                 the selector are caught.\n     * @param {Function} callback Callback to invoke when the event is caught.\n     *\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\n     * Selectors may be specified by separating them from the event name with a space. For example:\n     *\n     *     .on({\n     *         'blur': this._blurred,\n     *         'click .some-input': this._inputClicked,\n     *     })\n     * @param {Object} data\n     * @return {this}\n     */\n    on(eventName, selector, callback, data = false) {\n        if (typeof eventName !== 'string') {\n            const eventsMap = eventName;\n            for (let key in eventsMap) {\n                if (eventsMap.hasOwnProperty(key)) {\n                    const split = key.split(' ');\n                    if (split.length > 1) {\n                        this.on(split[0], split[1], eventsMap[key], data);\n                    } else {\n                        this.on(split[0], '', eventsMap[key], data);\n                    }\n                }\n            }\n            return this;\n        }\n\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (!this.events.hasOwnProperty(eventName)) {\n            const useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\n\n            this.events[eventName] = {};\n        }\n\n        if (!this.events[eventName].hasOwnProperty(selector)) {\n            this.events[eventName][selector] = [];\n        }\n\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\n            this.events[eventName][selector].push(callback);\n        }\n\n        if (data) {\n            if (!this.eventData.hasOwnProperty(eventName)) {\n                this.eventData[eventName] = {};\n            }\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\n                this.eventData[eventName][selector] = data;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onEvent(event) {\n        let isPropagationStopped = false;\n        let stopPropagation = event.stopPropagation;\n        event.stopPropagation = function () {\n            stopPropagation.call(event);\n            isPropagationStopped = true;\n        };\n\n        if (event.detail && event.detail.data) {\n            event._contextMenuData = event.detail.data;\n        } else {\n            event._contextMenuData = this.contextMenuData;\n        }\n\n        let target = event.target;\n\n        const events = this.events[event.type.toLowerCase()];\n        const eventData = this.eventData[event.type.toLowerCase()];\n\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target && target !== this.el && isPropagationStopped === false) {\n            for (let selector in events) {\n                if (\n                    selector && eventData && eventData.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    event._extraContextMenuData = eventData[selector];\n                }\n\n                if (selector && events.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    this.context = target;\n                    EventListener.callAll(events[selector], event, this.context);\n                }\n            }\n            target = target.parentElement;\n            if (isPropagationStopped === true) {\n                break;\n            }\n        }\n\n        if (isPropagationStopped === false && events.hasOwnProperty('')) {\n            EventListener.callAll(events[''], event, this.context);\n        }\n    }\n\n    static callAll(callbacks, event, context) {\n        for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i].call(context, event);\n        }\n    }\n}\n\nmodule.exports = EventListener;\n","/**\n * @class Helper\n * @classdesc Few helper static functions\n */\nexport default class Helper {\n    /**\n     * @param elem\n     * @returns {boolean}\n     */\n    static isVisible(elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    }\n\n    /**\n     * @param el\n     * @param selector\n     * @returns {boolean}\n     */\n    static matchesSelector(el, selector) {\n        const method =\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n        return method.call(el, selector);\n    }\n\n    /**\n     * Calculates zIndex of an element\n     * @memberOf Helper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf Helper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n","/**\n * @class Html5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class Html5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element or selector to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ItemTypes|string} type - Specifies the type of the command. See {@link ItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {Object<string, EventListener>} listeners - EventListener on this item.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ItemTypes;\n","import Helper from './Helper';\nimport ItemTypes from './ItemTypes';\nimport EventListener from './EventListener';\n\nexport default class Operations {\n    /**\n     * @constructor\n     * @constructs Operations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(e.target);\n        const css = {};\n\n        // hide any open menus\n        let layer = document.getElementById('#context-menu-layer');\n        if (layer) {\n            EventListener.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\n        }\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        let hasVisibleItems = menuData.manager.operations.update.call($trigger, e, menuData);\n\n        if (hasVisibleItems === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = Helper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            EventListener.triggerEvent($trigger.get(0), 'contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        menuData.listeners.document.off('keydown').on('keydown', menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            // @todo this overwrites mousemove?\n            menuData.listeners.contextMenuAutoHide.on('mousemove', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n\n        // remove selected @todo trigger multiple?\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        if (menuData.listeners.contextMenuAutoHide) {\n            menuData.listeners.contextMenuAutoHide.destruct();\n        }\n        menuData.listeners.document.off('keydown');\n\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {}\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    EventListener.triggerEvent($trigger.get(0), 'contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        let menuElement = document.createElement('ul');\n        menuElement.className = 'context-menu-list ' + (currentMenuData.className || '');\n\n        currentMenuData.menuElement = menuElement;\n        menuElement.contextMenu = currentMenuData;\n        menuElement.contextMenuRoot = currentMenuData;\n\n        currentMenuData.$menu = $(menuElement).addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        // create contextMenu\n        // currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n        //     'contextMenu': currentMenuData,\n        //     'contextMenuRoot': rootMenuData\n        // });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            if (typeof item.listeners === 'undefined') {\n                item.listeners = {};\n            }\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = Helper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ItemTypes.separator:\n                        break;\n\n                    case ItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        $t.addClass('item-' + item.name);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ItemTypes.submenu && item.type !== ItemTypes.html && item.type !== ItemTypes.separator) {\n                    item.listeners.input = new EventListener($input.get(0), rootMenuData);\n                    item.listeners.input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        item.listeners.input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                // @todo what event?\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e._contextMenuData.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     *\n     * @return {boolean} hasVisibleItems\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n\n        let hasVisibleItems = false;\n\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n\n            if (visible) {\n                hasVisibleItems = true;\n            }\n\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ItemTypes.text:\n                    case ItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ItemTypes.checkbox:\n                    case ItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                let subMenuHasVisibleItems = rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n                if (subMenuHasVisibleItems) {\n                    hasVisibleItems = true;\n                }\n            }\n        });\n\n        return hasVisibleItems;\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this);\n\n        menuData.listeners.layer = new EventListener($layer.get(0), menuData);\n        menuData.listeners.layer\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ItemTypes from './classes/ItemTypes';\nimport elementFunction from './jquery/contextMenu';\nimport './polyfills/element-matches';\nimport 'custom-event-polyfill';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} Html5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {EventHandler} handle\n * @property {Operations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes: ItemTypes};\n","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {HTMLElement} menuElement - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n * @property {Object<string, EventListener>} listeners - All defined EventListener for this menu\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n","import EventListener from '../classes/EventListener';\n\n/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            // @todo change the way this is handled\n            // $t.first().trigger('contextmenu');\n            EventListener.triggerEvent($t.get(0), 'contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            EventListener.triggerEvent($t.get(0), 'contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            });\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                EventListener.triggerEvent($menu.get(0), 'contextmenu:hide');\n                // @todo handle this better?\n                // $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n"],"sourceRoot":""}