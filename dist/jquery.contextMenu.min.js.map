{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3dd5635d10567d5398d2","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","simple","text","textarea","checkbox","radio","select","html","separator","submenu","manager","_ContextMenu2","default","contextMenu","operation","options","execute","getInputValues","currentMenuData","data","setInputValues","fromMenu","element","html5builder","defaults","types","handle","handler","operations","menus","namespaces","$","fn","_contextMenuFunction2","ContextMenu","ContextMenuItemTypes","$t","$o","length","first","trigger","x","y","Event","pageX","pageY","mouseButton","button","$menu","context","isPlainObject","removeClass","addClass","each","selector","extend","contextmenu","target"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3dd5635d10567d5398d2","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ContextMenuItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ContextMenuItemTypes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}