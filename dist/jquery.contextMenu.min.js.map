{"version":3,"sources":["webpack://ContextMenu/webpack/bootstrap","webpack://ContextMenu/./src/js/classes/EventListener.js","webpack://ContextMenu/./src/js/classes/Helper.js","webpack://ContextMenu/./src/js/classes/ItemTypes.js","webpack://ContextMenu/./src/js/defaults/index.js","webpack://ContextMenu/./src/js/classes/ContextMenu.js","webpack://ContextMenu/./src/js/classes/Operations.js","webpack://ContextMenu/./src/js/defaults/position.js","webpack://ContextMenu/./src/js/classes/Html5Builder.js","webpack://ContextMenu/./src/js/classes/EventHandler.js","webpack://ContextMenu/./src/js/polyfills/element-matches.js","webpack://ContextMenu/./node_modules/custom-event-polyfill/polyfill.js","webpack://ContextMenu/./node_modules/classlist-polyfill/src/index.js","webpack://ContextMenu/./src/js/jquery.contextmenu.js","webpack://ContextMenu/./src/js/jquery/contextMenu.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","a","length","configurable","writable","NOT_CAPTURED_EVENTS","EventListener","el","contextMenuData","this","window","instanceId","events","eventData","_onEvent","keys","forEach","eventName","useCapture","indexOf","removeEventListener","context","selector","callback","splice","data","arguments","eventsMap","split","on","addEventListener","push","event","isPropagationStopped","stopPropagation","detail","_contextMenuData","target","type","toLowerCase","Helper","matchesSelector","_extraContextMenuData","callAll","parentElement","bubbles","cancelable","CustomEvent","dispatchEvent","defaultPrevented","callbacks","elem","offsetWidth","offsetHeight","getClientRects","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","$t","zin","$tt","Math","max","parseInt","css","parent","prop","val","k","charAt","toUpperCase","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","baseElement","document","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","$","noop","activated","items","build","types","determinePosition","position","positionSubmenu","u","ContextMenu","html5builder","Html5Builder","defaults","handler","EventHandler","operations","Operations","namespaces","initialized","menus","counter","operation","options","normalizedArguments","normalizeArguments","update","destroy","html5","Error","buildOptions","body","each","id","contextMenu","fromMenu","_this","$visibleMenu","_hasContext","is","filter","contextMenuRoot","$trigger","find","triggerEvent","force","removeListeners","$menu","remove","getVisibleMenus","namespace","layer","getElementById","parentNode","removeChild","querySelectorAll","$currentTrigger","match","isEmptyObject","listeners","itemClick","itemClickEvent","hideMenu","prevItem","nextItem","abortevent","menuMouseleave","menuMouseenter","focusItem","blurItem","itemMouseleave","itemMouseenter","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","manager","first","inputs","item","selected","$input","Array","element","isVisible","_this3","values","destruct","TypeError","menuData","x","y","additionalZValue","zindex","addClass","off","contextMenuAutoHide","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","currentMenuData","rootMenuData","menuElement","createElement","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","accesskeys","$label","ItemTypes","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","hasTypes","attr","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","ceil","width","minWidth","maxWidth","index","resize","addBack","hasVisibleItems","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","node","$this","$children","builder","nodeName","label","inputLabel","clone","hoveract","preventDefault","stopImmediatePropagation","originalEvent","mouseButton","classList","contains","built","showMenu","button","$related","relatedTarget","closest","clearTimeout","timer","root","fakeClick","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","targetZIndex","getZIndexOfTriggerTarget","keyCode","keyStop","shiftKey","blur","hasClass","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","$elements","join","not","isEqualNode","Element","ce","params","evt","origPrevent","createEvent","initCustomEvent","Event","self","createElementNS","view","elemCtrProto","objCtr","strTrim","trim","replace","arrIndexOf","len","DOMEx","message","code","DOMException","checkTokenAndGetIndex","token","test","ClassList","trimmedClasses","getAttribute","classes","_updateClassName","setAttribute","toString","classListProto","classListGetter","add","tokens","updated","toggle","result","method","classListPropDesc","ex","number","__defineGetter__","testElement","createMethod","original","DOMTokenList","_toggle","execute","getInputValues","setInputValues","handle","fn","elementFunction","ContextMenuItemTypes","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict';\nimport Helper from './Helper';\n\nconst NOT_CAPTURED_EVENTS = [];// ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\n\n/**\n * Listens to events dispatched to an element or its children.\n *\n * @param {Element} el The element to listen to.\n * @param {ContextMenuData} contextMenuData ContextMenuData of menu this is bound to\n * @param {Element} context Optional context in which to execute the callbacks.\n */\nclass EventListener {\n    constructor(el, contextMenuData) {\n        if (!window.instanceId) {\n            window.instanceId = 0;\n        }\n        this.instanceId = window.instanceId++;\n\n        this.contextMenuData = contextMenuData || null;\n        this.el = el;\n        this.events = {};\n        this.eventData = {};\n        this._onEvent = this._onEvent.bind(this);\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    static triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    /**\n     * Destructor.\n     *\n     * Removes all event listeners and cleans up all references.\n     */\n    destruct() {\n        if (this.events !== null) {\n            Object.keys(this.events).forEach(function (eventName) {\n                // let useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n                let useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n                this.el.removeEventListener(eventName, this._onEvent, useCapture);\n            }, this);\n        }\n\n        this.context = null;\n        this.contextMenuData = null;\n        this.el = null;\n        this.events = null;\n        this.eventData = null;\n    }\n\n    /**\n     * Stops listening to an event.\n     *\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\n     * given event and class are discarded.\n     * @param {string} eventName\n     * @param {string?} selector\n     * @param {Function?} callback\n     *\n     * @returns {EventListener}\n     */\n    off(eventName, selector, callback) {\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (callback) {\n            let events = this.events[eventName];\n            if (events) {\n                events = events[selector];\n                if (events) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (events[i] === callback) {\n                            events.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        } else {\n            if (this.events.hasOwnProperty(eventName) && this.events[eventName].hasOwnProperty(selector)) {\n                this.events[eventName][selector] = [];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Starts listening to an event.\n     *\n     * @param {string} eventName Name of the event to listen to, in lower-case.\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\n     *                 the selector are caught.\n     * @param {Function} callback Callback to invoke when the event is caught.\n     *\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\n     * Selectors may be specified by separating them from the event name with a space. For example:\n     *\n     *     .on({\n     *         'blur': this._blurred,\n     *         'click .some-input': this._inputClicked,\n     *     })\n     * @param {Object} data\n     * @return {this}\n     */\n    on(eventName, selector, callback, data = false) {\n        if (typeof eventName !== 'string') {\n            const eventsMap = eventName;\n            for (let key in eventsMap) {\n                if (eventsMap.hasOwnProperty(key)) {\n                    const split = key.split(' ');\n                    if (split.length > 1) {\n                        this.on(split[0], split[1], eventsMap[key], data);\n                    } else {\n                        this.on(split[0], '', eventsMap[key], data);\n                    }\n                }\n            }\n            return this;\n        }\n\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (!this.events.hasOwnProperty(eventName)) {\n            const useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\n\n            this.events[eventName] = {};\n        }\n\n        if (!this.events[eventName].hasOwnProperty(selector)) {\n            this.events[eventName][selector] = [];\n        }\n\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\n            this.events[eventName][selector].push(callback);\n        }\n\n        if (data) {\n            if (!this.eventData.hasOwnProperty(eventName)) {\n                this.eventData[eventName] = {};\n            }\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\n                this.eventData[eventName][selector] = data;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onEvent(event) {\n        let isPropagationStopped = false;\n        let stopPropagation = event.stopPropagation;\n        event.stopPropagation = function () {\n            stopPropagation.call(event);\n            isPropagationStopped = true;\n        };\n\n        if (event.detail && event.detail.data) {\n            event._contextMenuData = event.detail.data;\n        } else {\n            event._contextMenuData = this.contextMenuData;\n        }\n\n        let target = event.target;\n\n        const events = this.events[event.type.toLowerCase()];\n        const eventData = this.eventData[event.type.toLowerCase()];\n\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target && target !== this.el && isPropagationStopped === false) {\n            for (let selector in events) {\n                if (\n                    selector && eventData && eventData.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    event._extraContextMenuData = eventData[selector];\n                }\n\n                if (selector && events.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    this.context = target;\n                    EventListener.callAll(events[selector], event, this.context);\n                }\n            }\n            target = target.parentElement;\n            if (isPropagationStopped === true) {\n                break;\n            }\n        }\n\n        if (isPropagationStopped === false && events.hasOwnProperty('')) {\n            EventListener.callAll(events[''], event, this.context);\n        }\n    }\n\n    static callAll(callbacks, event, context) {\n        for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i].call(context, event);\n        }\n    }\n}\n\nmodule.exports = EventListener;\n","/**\n * @class Helper\n * @classdesc Few helper static functions\n */\nexport default class Helper {\n    /**\n     * @param elem\n     * @returns {boolean}\n     */\n    static isVisible(elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    }\n\n    /**\n     * @param el\n     * @param selector\n     * @returns {boolean}\n     */\n    static matchesSelector(el, selector) {\n        const method =\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n        return method.call(el, selector);\n    }\n\n    /**\n     * Calculates zIndex of an element\n     * @memberOf Helper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf Helper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ItemTypes|string} type - Specifies the type of the command. See {@link ItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {Object<string, EventListener>} listeners - EventListener on this item.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ItemTypes;\n","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {HTMLElement} menuElement - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n * @property {Object<string, EventListener>} listeners - All defined EventListener for this menu\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|HTMLElement} [appendTo=document.body] - Specifies the selector `string` or `HTMLElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {HTMLElement} baseElement - The base element which should listen to events, by default this is `document`.\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n\n    baseElement: document,\n\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n","import Operations from './Operations';\nimport defaults from '../defaults';\nimport Html5Builder from './Html5Builder';\nimport EventHandler from './EventHandler';\nimport EventListener from './EventListener';\nimport Helper from './Helper';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {EventHandler} handle\n     * @property {Operations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new Html5Builder();\n        this.defaults = defaults;\n        this.handler = new EventHandler();\n        this.operations = new Operations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n\n        // todo Context is deprecated in jQuery, perhaps just remove this way?\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu request to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    EventListener.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n                }\n\n                this.removeListeners(o.ns);\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                // todo JQuery?\n                // $(o.context).off(o.ns);\n\n                return true;\n            });\n        } else if (!options.selector) {\n            // todo JQuery?\n            // $(document).off('.contextMenu .contextMenuAutoHide');\n\n            this.removeListeners();\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            let layer = document.getElementById('context-menu-layer');\n            if (layer) {\n                layer.parentNode.removeChild(layer);\n            }\n\n            let contextMenus = document.querySelectorAll('.context-menu-list');\n            contextMenus.forEach(function (e) {\n                e.parentNode.removeChild(e);\n            });\n        } else if (this.namespaces[options.selector]) {\n            let visibleMenus = this.getVisibleMenus();\n            visibleMenus.forEach(function (e) {\n                // todo Should we check for correct menu? $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)\n                EventListener.triggerEvent(e, 'contextmenu:hide', {force: true});\n            });\n\n            let namespace = this.namespaces[options.selector];\n\n            this.removeListeners(namespace);\n\n            if (this.menus[namespace].$menu) {\n                this.menus[namespace].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            // not needed\n            // $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        if (typeof options.listeners === 'undefined') {\n            options.listeners = {\n                baseElement: new EventListener(document, options)\n            };\n        }\n\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\n\n            // make sure item click is registered first\n            options.listeners.baseElement\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave)\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter);\n\n            options.listeners.baseElement\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave)\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter);\n\n            options.listeners.baseElement.on('mouseup', '.context-menu-input', this.handler.inputClick);\n\n            this.initialized = true;\n        }\n\n        if (options._hasContext) {\n            options.listeners.context = new EventListener(options.context.get(0), options);\n        } else {\n            options.listeners.context = options.listeners.baseElement;\n        }\n\n        // engage native contextmenu event\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.listeners.context\n                    .on('mouseenter', options.selector, this.handler.mouseenter)\n                    .on('mouseleave', options.selector, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.listeners.context.on('click', options.selector, this.handler.click);\n                break;\n            case 'touchstart':\n                options.listeners.context.on('touchstart', options.selector, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n\n    getVisibleMenus() {\n        return Array.prototype.filter.call(document.querySelectorAll('.context-menu-list'), (element) => {\n            return Helper.isVisible(element)\n        });\n    }\n\n    /**\n     * Removes all event listner\n     *\n     * @param {string?} namespace Namespace of the contextmenu to destroy, no value means all\n     */\n    removeListeners(namespace) {\n        let namespaces = [namespace];\n        if (!namespace) {\n            namespaces = Object.values(this.namespaces);\n        }\n\n        namespaces.forEach((ns) => {\n            if (this.menus[ns] && this.menus[ns].listeners) {\n                Object.keys(this.menus[ns].listeners).forEach((key) => {\n                    this.menus[ns].listeners[key].destruct();\n                });\n            }\n        });\n    }\n\n    getMenuBySelector(selector) {\n        return Object.values(this.menus).find((menu) => menu.selector === selector);\n    }\n}\n","import Helper from './Helper';\nimport ItemTypes from './ItemTypes';\nimport EventListener from './EventListener';\n\nexport default class Operations {\n    /**\n     * @constructor\n     * @constructs Operations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(e.target);\n        const css = {};\n\n        // hide any open menus\n        let layer = document.getElementById('#context-menu-layer');\n        if (layer) {\n            EventListener.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\n        }\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        let hasVisibleItems = menuData.manager.operations.update.call($trigger, e, menuData);\n\n        if (hasVisibleItems === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = Helper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            EventListener.triggerEvent($trigger.get(0), 'contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        menuData.listeners.baseElement.off('keydown').on('keydown', menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            // @todo this overwrites mousemove?\n            menuData.listeners.contextMenuAutoHide.on('mousemove', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n\n        // remove selected @todo trigger multiple?\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        if (menuData.listeners.contextMenuAutoHide) {\n            menuData.listeners.contextMenuAutoHide.destruct();\n        }\n        menuData.listeners.baseElement.off('keydown');\n\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {}\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    EventListener.triggerEvent($trigger.get(0), 'contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        let menuElement = document.createElement('ul');\n        menuElement.className = 'context-menu-list ' + (currentMenuData.className || '');\n\n        currentMenuData.menuElement = menuElement;\n        menuElement.contextMenu = currentMenuData;\n        menuElement.contextMenuRoot = currentMenuData;\n\n        currentMenuData.$menu = $(menuElement).addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        // create contextMenu\n        // currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n        //     'contextMenu': currentMenuData,\n        //     'contextMenuRoot': rootMenuData\n        // });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            if (typeof item.listeners === 'undefined') {\n                item.listeners = {};\n            }\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = Helper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ItemTypes.separator:\n                        break;\n\n                    case ItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        $t.addClass('item-' + item.name);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ItemTypes.submenu && item.type !== ItemTypes.html && item.type !== ItemTypes.separator) {\n                    item.listeners.input = new EventListener($input.get(0), rootMenuData);\n                    item.listeners.input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        item.listeners.input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                // @todo what event?\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e._contextMenuData.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     *\n     * @return {boolean} hasVisibleItems\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n\n        let hasVisibleItems = false;\n\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n\n            if (visible) {\n                hasVisibleItems = true;\n            }\n\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ItemTypes.text:\n                    case ItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ItemTypes.checkbox:\n                    case ItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                let subMenuHasVisibleItems = rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n                if (subMenuHasVisibleItems) {\n                    hasVisibleItems = true;\n                }\n            }\n        });\n\n        return hasVisibleItems;\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this);\n\n        menuData.listeners.layer = new EventListener($layer.get(0), menuData);\n        menuData.listeners.layer\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf Operations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n","/**\n * @class Html5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class Html5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element or selector to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf Html5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n","import defaults from '../defaults';\nimport EventListener from './EventListener'\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} _contextMenuData\n */\n\nexport default class EventHandler {\n    /**\n     * @constructs EventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(this);\n\n        if (!e._contextMenuData) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e._contextMenuData.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e._contextMenuData.trigger !== 'right' && e._contextMenuData.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e._contextMenuData.trigger === 'left' && e.mouseButton === 0) && !(e._contextMenuData.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if (this.classList.contains('context-menu-active')) {\n            return;\n        }\n\n        if (!this.classList.contains('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e._contextMenuData.$menu.trigger(evt);\n\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            if (e._contextMenuData.build) {\n                const built = e._contextMenuData.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e._contextMenuData = $.extend(true, {}, defaults, e._contextMenuData, built || {});\n\n                // abort if there are no items to display\n                if (!e._contextMenuData.items || $.isEmptyObject(e._contextMenuData.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e._contextMenuData.$trigger = e._contextMenuData.manager.handler.$currentTrigger;\n\n                e._contextMenuData.manager.operations.create(e, e._contextMenuData);\n            }\n            let showMenu = false;\n\n            Object.keys(e._contextMenuData.items).forEach((key) => {\n                let visible;\n                if (typeof e._contextMenuData.items[key].visible === 'function') {\n                    visible = e._contextMenuData.items[key].visible.call($this, e, key, e._contextMenuData, e._contextMenuData);\n                } else if (typeof e._contextMenuData.items[key].visible !== 'undefined') {\n                    visible = e._contextMenuData.items[key].visible === true;\n                } else {\n                    visible = true;\n                }\n                if (visible) {\n                    showMenu = true;\n                }\n            });\n\n            if (showMenu) {\n                // show menu\n                e._contextMenuData.manager.operations.show.call($this, e, e._contextMenuData, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && !e._contextMenuData.manager.handler.$currentTrigger.is($this)) {\n            EventListener.triggerEvent(e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e._contextMenuData, originalEvent: e});\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e._contextMenuData.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && e._contextMenuData.manager.handler.$currentTrigger.is($this) && !this.classList.contains('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            EventListener.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        // @todo const $this = $(this);\n        const $related = $(e.relatedTarget);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n        e._contextMenuData.manager.handler.hoveract.data = e._contextMenuData;\n\n        // todo: auto hide delay?\n        // console.log('========== temp mouseenter');\n        // let eventListener = new EventListener(document, e._contextMenuData);\n        // eventListener.on('mousemove', e._contextMenuData.manager.handler.mousemove);\n        // e._contextMenuData.manager.handler.hoveract.timer = setTimeout(() => {\n        //     e._contextMenuData.manager.handler.hoveract.timer = null;\n        //     eventListener.off('mousemove');\n        //     eventListener.destruct();\n        //     eventListener = null;\n        //     e._contextMenuData.manager.handler.$currentTrigger = $this;\n        //     e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {\n        //         data: e._contextMenuData.manager.handler.hoveract.data,\n        //         pageX: e._contextMenuData.manager.handler.hoveract.pageX,\n        //         pageY: e._contextMenuData.manager.handler.hoveract.pageY\n        //     });\n        // }, e._contextMenuData.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e._contextMenuData.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e._contextMenuData.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        /** @var ContextMenuData **/\n        let root = e._contextMenuData;\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let fakeClick = x === undefined;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            if (fakeClick) {\n                if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                    root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                }\n                return;\n            }\n\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                EventListener.triggerEvent(target, e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                EventListener.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e._contextMenuData.manager.handler.$currentTrigger) {\n            rootMenuData = e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        EventListener.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, true);\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    EventListener.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e}, false);\n                    // @todo weird event?\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    EventListener.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {\n                        data: rootMenuData,\n                        originalEvent: e\n                    }, false);\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.get(0).dispatchEvent(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                break;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = e._contextMenuData;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = e._contextMenuData;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        console.log('itemmouseenter');\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        // @todo let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n\n        if (this.classList.contains(rootMenuData.classNames.disabled) || this.classList.contains(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        e.stopPropagation();\n        EventListener.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e}, true);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                console.log('blur itemmouseleave?');\n                // todo handled somewhere else?\n                // rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e}, false);\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            // todo unneeded?\n            // return;\n        }\n\n        // @todo unneeded?\n        // if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n        //     return;\n        // }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            EventListener.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        // e.stopPropagation();\n\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (this.classList.contains(rootMenuData.classNames.disabled) || this.classList.contains(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        let $elements = $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent()\n            .find('> .context-menu-item')\n            .not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover);\n\n        if ($elements.length > 0) {\n            // Blur other elements in this menu\n            $elements.each(function (i, element) {\n                if (!element.isEqualNode(e.target)) {\n                    EventListener.triggerEvent(element, 'contextmenu:blur', {data: currentMenuData}, true);\n                }\n            });\n        }\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n            currentMenuData.$node.addClass(rootMenuData.classNames.visible);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            if (currentMenuData.$node.get(0).isEqualNode(e.target)) {\n                // currentMenuData.$node.addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '));\n                rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf EventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        // e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20170427\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in window.self) {\n\n// Full polyfill for browsers with no classList support\n// Including IE < Edge missing SVGElement.classList\nif (!(\"classList\" in document.createElement(\"_\")) \n\t|| document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nif (!('Element' in view)) return;\n\nvar\n\t  classListProp = \"classList\"\n\t, protoProp = \"prototype\"\n\t, elemCtrProto = view.Element[protoProp]\n\t, objCtr = Object\n\t, strTrim = String[protoProp].trim || function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\tvar\n\t\t\t  i = 0\n\t\t\t, len = this.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tif (i in this && this[i] === item) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t// Vendors: please allow content code to instantiate DOMExceptions\n\t, DOMEx = function (type, message) {\n\t\tthis.name = type;\n\t\tthis.code = DOMException[type];\n\t\tthis.message = message;\n\t}\n\t, checkTokenAndGetIndex = function (classList, token) {\n\t\tif (token === \"\") {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t);\n\t\t}\n\t\tif (/\\s/.test(token)) {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t, \"String contains an invalid character\"\n\t\t\t);\n\t\t}\n\t\treturn arrIndexOf.call(classList, token);\n\t}\n\t, ClassList = function (elem) {\n\t\tvar\n\t\t\t  trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t, i = 0\n\t\t\t, len = classes.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tthis.push(classes[i]);\n\t\t}\n\t\tthis._updateClassName = function () {\n\t\t\telem.setAttribute(\"class\", this.toString());\n\t\t};\n\t}\n\t, classListProto = ClassList[protoProp] = []\n\t, classListGetter = function () {\n\t\treturn new ClassList(this);\n\t}\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n\treturn this[i] || null;\n};\nclassListProto.contains = function (token) {\n\ttoken += \"\";\n\treturn checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.remove = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t\t, index\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tindex = checkTokenAndGetIndex(this, token);\n\t\twhile (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tupdated = true;\n\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.toggle = function (token, force) {\n\ttoken += \"\";\n\n\tvar\n\t\t  result = this.contains(token)\n\t\t, method = result ?\n\t\t\tforce !== true && \"remove\"\n\t\t:\n\t\t\tforce !== false && \"add\"\n\t;\n\n\tif (method) {\n\t\tthis[method](token);\n\t}\n\n\tif (force === true || force === false) {\n\t\treturn force;\n\t} else {\n\t\treturn !result;\n\t}\n};\nclassListProto.toString = function () {\n\treturn this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n\tvar classListPropDesc = {\n\t\t  get: classListGetter\n\t\t, enumerable: true\n\t\t, configurable: true\n\t};\n\ttry {\n\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t// adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n\t\t// modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n\t\tif (ex.number === undefined || ex.number === -0x7FF5EC54) {\n\t\t\tclassListPropDesc.enumerable = false;\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t}\n\t}\n} else if (objCtr[protoProp].__defineGetter__) {\n\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(window.self));\n\n}\n\n// There is full or partial native classList support, so just check if we need\n// to normalize the add/remove and toggle APIs.\n\n(function () {\n\t\"use strict\";\n\n\tvar testElement = document.createElement(\"_\");\n\n\ttestElement.classList.add(\"c1\", \"c2\");\n\n\t// Polyfill for IE 10/11 and Firefox <26, where classList.add and\n\t// classList.remove exist but support only one argument at a time.\n\tif (!testElement.classList.contains(\"c2\")) {\n\t\tvar createMethod = function(method) {\n\t\t\tvar original = DOMTokenList.prototype[method];\n\n\t\t\tDOMTokenList.prototype[method] = function(token) {\n\t\t\t\tvar i, len = arguments.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttoken = arguments[i];\n\t\t\t\t\toriginal.call(this, token);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tcreateMethod('add');\n\t\tcreateMethod('remove');\n\t}\n\n\ttestElement.classList.toggle(\"c3\", false);\n\n\t// Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n\t// support the second argument.\n\tif (testElement.classList.contains(\"c3\")) {\n\t\tvar _toggle = DOMTokenList.prototype.toggle;\n\n\t\tDOMTokenList.prototype.toggle = function(token, force) {\n\t\t\tif (1 in arguments && !this.contains(token) === !force) {\n\t\t\t\treturn force;\n\t\t\t} else {\n\t\t\t\treturn _toggle.call(this, token);\n\t\t\t}\n\t\t};\n\n\t}\n\n\ttestElement = null;\n}());\n\n}\n","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ItemTypes from './classes/ItemTypes';\nimport elementFunction from './jquery/contextMenu';\nimport './polyfills/element-matches';\nimport 'custom-event-polyfill';\nimport 'classlist-polyfill';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} Html5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {EventHandler} handle\n * @property {Operations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes: ItemTypes};\n","import EventListener from '../classes/EventListener';\n\n/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            // @todo change the way this is handled\n            // $t.first().trigger('contextmenu');\n            EventListener.triggerEvent($t.get(0), 'contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            EventListener.triggerEvent($t.get(0), 'contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            });\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                EventListener.triggerEvent($menu.get(0), 'contextmenu:hide');\n                // @todo handle this better?\n                // $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n"],"sourceRoot":""}