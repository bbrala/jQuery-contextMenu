{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c4540a660b9fb87f8708","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenu.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js","webpack:///./src/js/classes/ContextMenuEventListener.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","manager","_ContextMenu2","default","contextMenu","operation","options","execute","getInputValues","currentMenuData","data","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","ContextMenu","ContextMenuItemTypes","_classCallCheck","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","normalizedArguments","normalizeArguments","update","create","destroy","html5","Error","buildOptions","document","body","window","each","id","css","_this","$visibleMenu","_hasContext","context","keys","forEach","ns","is","filter","length","contextMenuRoot","$trigger","find","triggerEvent","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","eventListeners","listeners","_ContextMenuEventListener2","contextMenuAutoHide","itemClick","itemClickEvent","on","hideMenu","prevItem","nextItem","abortevent","menuMouseenter","menuMouseleave","inputClick","focusItem","blurItem","itemMouseenter","itemMouseleave","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","first","contextMenuData","inputs","key","item","type","value","selected","$input","val","prop","el","eventName","arguments","undefined","event","CustomEvent","detail","dispatchEvent","defaultPrevented","ContextMenuOperations","e","menuData","x","y","getElementById","additionalZValue","_ContextMenuHelper2","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","destruct","rootMenuData","k","accesskeys","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","$t","$label","_ContextMenuItemTypes2","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","callbacks","hasTypes","attr","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","Math","ceil","width","minWidth","maxWidth","index","resize","addBack","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","bind","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ContextMenuHelper","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","zin","$tt","max","parseInt","parent","indexOf","toLowerCase","t","split","charAt","toUpperCase","push","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","builder","nodeName","label","inputLabel","clone","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","currentTarget","originalEvent","mouseButton","hasClass","built","showMenu","button","$related","relatedTarget","closest","eventListener","mousemove","timer","clearTimeout","target","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","parentElement","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","$element","join","not","$o","Event","isPlainObject","_ContextMenuHelper","CAPTURED_EVENTS","ContextMenuEventListener","_onEvent","useCapture","removeEventListener","eventData","splice","eventsMap","addEventListener","isPropagationStopped","callAll","matchesSelector"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4540a660b9fb87f8708","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ContextMenuItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ContextMenuItemTypes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\nimport defaults from '../defaults';\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\nimport ContextMenuEventListener from './ContextMenuEventListener';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new ContextMenuHtml5Builder();\n        this.defaults = defaults;\n        this.handler = new ContextMenuEventHandler();\n        this.operations = new ContextMenuOperations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu equest to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n                }\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                $(o.context).off(o.ns);\n                return true;\n            });\n        } else if (!options.selector) {\n            $(document).off('.contextMenu .contextMenuAutoHide');\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n                $(o.context).off(o.ns);\n            });\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            $('#context-menu-layer, .context-menu-list').remove();\n        } else if (this.namespaces[options.selector]) {\n            $visibleMenu = $('.context-menu-list').filter(':visible');\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\n                this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n            }\n\n            if (this.menus[this.namespaces[options.selector]].$menu) {\n                this.menus[this.namespaces[options.selector]].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        if (typeof options.eventListeners === 'undefined') {\n            options.listeners = {\n                document: new ContextMenuEventListener(document),\n                contextMenuAutoHide: new ContextMenuEventListener(document)\n            };\n        }\n\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\n\n            // make sure item click is registered first\n            options.listeners.document\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter)\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave)\n                .on('mouseup', '.context-menu-input', this.handler.inputClick)\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter)\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave);\n\n            this.initialized = true;\n        }\n\n        options.listeners.context = new ContextMenuEventListener(options.context.get(0));\n\n        // engage native contextmenu event\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.listeners.context\n                    .on('mouseenter', options.selector, this.handler.mouseenter, options)\n                    .on('mouseleave', options.selector, this.handler.mouseleave, options);\n                break;\n\n            case 'left':\n                options.listeners.context.on('click', options.selector, this.handler.click);\n                break;\n            case 'touchstart':\n                options.listeners.context.on('touchstart' + options.ns, options.selector, options, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     *\n     * @return Whether the default action of the event may be executed, ie. returns false if\n     *         preventDefault() has been called.\n     */\n    triggerEvent(el, eventName, data = {}) {\n        const event = new CustomEvent(eventName, { detail: data });\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenu.js","import ContextMenuHelper from './ContextMenuHelper';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\nimport ContextMenuEventListener from './ContextMenuEventListener';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(this);\n        const css = {};\n\n        // hide any open menus\n        menuData.manager.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        menuData.manager.operations.update.call($trigger, e, menuData);\n\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            menuData.manager.triggerEvent($trigger.get(0), 'contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n\n        menuData.eventListeners.document.off('keydown').on('keydown', menuData.manager.handler.key, menuData);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            menuData.eventListeners.contextMenuAutoHide.on('mousemove', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            menuData.manager.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n        // remove selected @todo trigger multiple?\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        menuData.manager.eventListeners.contextMenuAutoHide.destruct();\n        menuData.manager.eventListeners.document.off('keydown');\n\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, () => {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {\n                                }\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(() => {\n                    menuData.manager.triggerEvent($trigger.get(0), 'contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            if (typeof item.eventListeners === 'undefined') {\n                item.eventListeners = {};\n            }\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    item.eventListeners.input = new ContextMenuEventListener($input.get(0));\n                    item.eventListeners.input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        item.eventListeners.input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                // @todo what event?\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-rootMenuData');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e.data.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n            }\n        });\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this);\n\n        menuData.manager.eventListeners.layer = new ContextMenuEventListener($layer.get(0));\n        menuData.manager.eventListeners.layer\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","/**\n * @class ContextMenuHelper\n * @classdesc Few helper static functions\n */\nexport default class ContextMenuHelper {\n    static matchedSelector(el, selector) {\n        const method =\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n        return method.call(el, selector);\n    }\n\n    /**\n     * Calculates zIndex of an element\n     * @memberOf ContextMenuHelper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf ContextMenuHelper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\n * @class ContextMenuHtml5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class ContextMenuHtml5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\nimport ContextMenuEventListener from './ContextMenuEventListener'\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} data\n */\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(e.currentTarget);\n\n        if (!e.data) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e.data.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e.data.$menu.trigger(evt);\n\n            e.data.manager.handler.$currentTrigger = $this;\n            if (e.data.build) {\n                const built = e.data.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                // abort if there are no items to display\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\n\n                e.data.manager.operations.create(e, e.data);\n            }\n            let showMenu = false;\n\n            Object.keys(e.data.items).forEach((key) => {\n                let visible;\n                if (typeof e.data.items[key].visible === 'function') {\n                    visible = e.data.items[key].visible.call($this, e, key, e.data, e.data);\n                } else if (typeof e.data.items[key].visible !== 'undefined') {\n                    visible = e.data.items[key].visible === true;\n                } else {\n                    visible = true;\n                }\n                if (visible) {\n                    showMenu = true;\n                }\n            });\n\n            if (showMenu) {\n                // show menu\n                e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        e.data.manager.triggerEvent(this, 'contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\n            e.data.manager.triggerEvent(e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e.data, originalEvent: e});\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.data.manager.handler.$currentTrigger = $this;\n            e.data.manager.triggerEvent(this, 'contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n        e.data.manager.handler.hoveract.data = e.data;\n        let eventListener = new ContextMenuEventListener(document, e.data.manager.handler.mousemove);\n        eventListener.on('mousemove', e.data.manager.handler.mousemove);\n        e.data.manager.handler.hoveract.timer = setTimeout(() => {\n            e.data.manager.handler.hoveract.timer = null;\n            eventListener.off('mousemove');\n            e.data.manager.handler.$currentTrigger = $this;\n            e.data.manager.triggerEvent(this, 'contextmenu', {\n                data: e.data.manager.handler.hoveract.data,\n                pageX: e.data.manager.handler.hoveract.pageX,\n                pageY: e.data.manager.handler.hoveract.pageY\n            });\n        }, e.data.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e.data.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e.data.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        let $this = $(this);\n        /** @var ContextMenuData **/\n        let root = $this.data('contextMenuRoot');\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                $(target).trigger(e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e.data.manager.handler.$currentTrigger) {\n            rootMenuData = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    rootMenuData.manager.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\n                    // @todo weird event?\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    let eventName = rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup';\n                    rootMenuData.manager.triggerEvent(rootMenuData.accesskeys[k].$node.get(0), eventName, {data: rootMenuData, originalEvent: e});\n\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.get(0).dispatchEvent(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = $(this).data().contextMenuRoot;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = $(this).data().contextMenuRoot;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n        // @todo trigger?\n        targetMenu.$menu\n            .children('.' + rootMenuData.classNames.hover).trigger('contextmenu:blur', {data: targetMenu, originalEvent: e})\n            .children('.hover').trigger('contextmenu:blur', {data: targetMenu, originalEvent: e});\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            return;\n        }\n\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n            return;\n        }\n\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:blur');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        let $element = $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent().find('.context-menu-item').not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover);\n\n        if ($element.length > 0) {\n            rootMenuData.manager.triggerEvent($element.get(0), 'contextmenu:blur');\n        }\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js","'use strict';\nimport Helper from './ContextMenuHelper';\n\nconst CAPTURED_EVENTS = ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\n\n/**\n * Listens to events dispatched to an element or its children.\n *\n * @param {Element} el The element to listen to.\n * @param {Element} context Optional context in which to execute the callbacks.\n */\nclass ContextMenuEventListener {\n    constructor(el, context) {\n        this.context = context || null;\n        this.el = el;\n        this.events = {};\n        this._onEvent = this._onEvent.bind(this);\n    }\n\n    /**\n     * Destructor.\n     *\n     * Removes all event listeners and cleans up all references.\n     */\n    destruct() {\n        Object.keys(this.events).forEach(function (eventName) {\n            var useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n            this.el.removeEventListener(eventName, this._onEvent, useCapture);\n        }, this);\n\n        this.context = null;\n        this.el = null;\n        this.events = null;\n        this.eventData = null;\n    }\n\n    /**\n     * Stops listening to an event.\n     *\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\n     * given event and class are discarded.\n     * @param {string} eventName\n     * @param {string} selector\n     * @param {Function} callback\n     *\n     * @returns {ContextMenuEventListener}\n     */\n    off(eventName, selector, callback) {\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (callback) {\n            let events = this.events[eventName];\n            if (events) {\n                events = events[selector];\n                if (events) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (events[i] === callback) {\n                            events.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        } else {\n            this.events[eventName][selector] = [];\n        }\n        return this;\n    }\n\n    /**\n     * Starts listening to an event.\n     *\n     * @param {string} eventName Name of the event to listen to, in lower-case.\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\n     *                 the selector are caught.\n     * @param {Function} callback Callback to invoke when the event is caught.\n     *\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\n     * Selectors may be specified by separating them from the event name with a space. For example:\n     *\n     *     .on({\n     *         'blur': this._blurred,\n     *         'click .some-input': this._inputClicked,\n     *     })\n     * @param {Object} data\n     */\n    on(eventName, selector, callback, data = {}) {\n        if (typeof eventName !== 'string') {\n            const eventsMap = eventName;\n            for (let key in eventsMap) {\n                if (eventsMap.hasOwnProperty(key)) {\n                    const split = key.split(' ');\n                    if (split.length > 1) {\n                        this.on(split[0], split[1], eventsMap[key], data);\n                    } else {\n                        this.on(split[0], '', eventsMap[key], data);\n                    }\n                }\n            }\n            return this;\n        }\n\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (!this.events.hasOwnProperty(eventName)) {\n            const useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\n\n            this.events[eventName] = {};\n        }\n\n        if (!this.events[eventName].hasOwnProperty(selector)) {\n            this.events[eventName][selector] = [];\n        }\n\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\n            this.events[eventName][selector].push(callback);\n        }\n\n        if (data) {\n            if (!this.eventData.hasOwnProperty(eventName)) {\n                this.eventData[eventName] = {};\n            }\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\n                this.eventData[eventName][selector] = data;\n            }\n        }\n\n        return this;\n    }\n\n    _onEvent(event) {\n        let isPropagationStopped = false;\n        let stopPropagation = event.stopPropagation;\n        event.stopPropagation = function () {\n            stopPropagation.call(event);\n            isPropagationStopped = true;\n        };\n\n        const context = this.context;\n\n        function callAll(callbacks) {\n            for (let i = 0; i < callbacks.length; i++) {\n                callbacks[i].call(context, event);\n            }\n        }\n\n        let target = event.target;\n        const events = this.events[event.type.toLowerCase()];\n        const eventData = this.eventData[event.type.toLowerCase()];\n        if (isPropagationStopped === false) {\n            while (target && target !== this.el) {\n                for (let selector in events) {\n                    if (\n                        selector &&\n                        eventData.hasOwnProperty(selector) &&\n                        Helper.matchesSelector(target, selector)\n                    ) {\n                        event.data = eventData[selector];\n                    }\n\n                    if (\n                        selector &&\n                        events.hasOwnProperty(selector) &&\n                        Helper.matchesSelector(target, selector)\n                    ) {\n                        callAll(events[selector]);\n                    }\n                }\n                target = target.parentElement;\n            }\n        }\n\n        if (!isPropagationStopped && events.hasOwnProperty('')) {\n            callAll(events['']);\n        }\n    }\n}\n\nmodule.exports = ContextMenuEventListener;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventListener.js"],"sourceRoot":""}