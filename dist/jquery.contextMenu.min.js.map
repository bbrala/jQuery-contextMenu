{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3a031cdfaec02305b1d0","webpack:///./src/js/classes/ContextMenuEventListener.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenu.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_ContextMenuHelper","NOT_CAPTURED_EVENTS","ContextMenuEventListener","el","contextMenuData","_classCallCheck","window","instanceId","console","log","events","eventData","_onEvent","bind","keys","forEach","eventName","useCapture","indexOf","removeEventListener","context","selector","callback","length","splice","data","arguments","undefined","eventsMap","key","split","on","addEventListener","push","event","type","isPropagationStopped","stopPropagation","detail","_contextMenuData","target","toLowerCase","group","_ContextMenuHelper2","default","matchesSelector","_extraContextMenuData","callAll","parentElement","groupEnd","callbacks","ContextMenuHelper","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","$t","zin","$tt","Math","max","parseInt","css","parent","prop","val","k","t","charAt","toUpperCase","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","$","noop","activated","items","build","types","determinePosition","position","positionSubmenu","manager","_ContextMenu2","contextMenu","operation","options","execute","getInputValues","currentMenuData","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","ContextMenu","ContextMenuItemTypes","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","normalizedArguments","normalizeArguments","update","create","destroy","html5","Error","buildOptions","document","body","each","id","_this","$visibleMenu","_hasContext","ns","is","filter","contextMenuRoot","$trigger","find","triggerEvent","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","listeners","_ContextMenuEventListener2","itemClick","itemClickEvent","hideMenu","prevItem","nextItem","abortevent","menuMouseleave","menuMouseenter","focusItem","blurItem","itemMouseleave","itemMouseenter","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","first","inputs","item","value","selected","$input","bubbles","cancelable","CustomEvent","dispatchEvent","defaultPrevented","ContextMenuOperations","e","menuData","x","y","getElementById","additionalZValue","zindex","layer","addClass","contextMenuAutoHide","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","destruct","rootMenuData","accesskeys","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","$label","_ContextMenuItemTypes2","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","hasTypes","attr","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","ceil","width","minWidth","maxWidth","index","resize","addBack","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","builder","nodeName","label","inputLabel","clone","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","originalEvent","mouseButton","hasClass","built","showMenu","button","$related","relatedTarget","closest","clearTimeout","timer","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","targetZIndex","getZIndexOfTriggerTarget","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","$element","join","not","$o","Event","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3a031cdfaec02305b1d0","'use strict';\nimport Helper from './ContextMenuHelper';\n\nconst NOT_CAPTURED_EVENTS = [];// ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\n\n/**\n * Listens to events dispatched to an element or its children.\n *\n * @param {Element} el The element to listen to.\n * @param {ContextMenuData} contextMenuData ContextMenuData of menu this is bound to\n * @param {Element} context Optional context in which to execute the callbacks.\n */\nclass ContextMenuEventListener {\n    constructor(el, contextMenuData) {\n        if (!window.instanceId) {\n            window.instanceId = 0;\n        }\n        this.instanceId = window.instanceId++;\n        console.log('New listener', el, this.instanceId);\n\n        this.contextMenuData = contextMenuData || null;\n        this.el = el;\n        this.events = {};\n        this.eventData = {};\n        this._onEvent = this._onEvent.bind(this);\n    }\n\n    /**\n     * Destructor.\n     *\n     * Removes all event listeners and cleans up all references.\n     */\n    destruct() {\n        if (this.events !== null) {\n            Object.keys(this.events).forEach(function (eventName) {\n                // let useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\n                let useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n                this.el.removeEventListener(eventName, this._onEvent, useCapture);\n            }, this);\n        }\n\n        this.context = null;\n        this.contextMenuData = null;\n        this.el = null;\n        this.events = null;\n        this.eventData = null;\n    }\n\n    /**\n     * Stops listening to an event.\n     *\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\n     * given event and class are discarded.\n     * @param {string} eventName\n     * @param {string?} selector\n     * @param {Function?} callback\n     *\n     * @returns {ContextMenuEventListener}\n     */\n    off(eventName, selector, callback) {\n        // console.log('Off', eventName, selector, callback);\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (callback) {\n            let events = this.events[eventName];\n            if (events) {\n                events = events[selector];\n                if (events) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (events[i] === callback) {\n                            events.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        } else {\n            if (this.events.hasOwnProperty(eventName) && this.events[eventName].hasOwnProperty(selector)) {\n                this.events[eventName][selector] = [];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Starts listening to an event.\n     *\n     * @param {string} eventName Name of the event to listen to, in lower-case.\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\n     *                 the selector are caught.\n     * @param {Function} callback Callback to invoke when the event is caught.\n     *\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\n     * Selectors may be specified by separating them from the event name with a space. For example:\n     *\n     *     .on({\n     *         'blur': this._blurred,\n     *         'click .some-input': this._inputClicked,\n     *     })\n     * @param {Object} data\n     * @return {this}\n     */\n    on(eventName, selector, callback, data = false) {\n        console.log('On', eventName, selector, this.instanceId);\n        if (typeof eventName !== 'string') {\n            const eventsMap = eventName;\n            for (let key in eventsMap) {\n                if (eventsMap.hasOwnProperty(key)) {\n                    const split = key.split(' ');\n                    if (split.length > 1) {\n                        this.on(split[0], split[1], eventsMap[key], data);\n                    } else {\n                        this.on(split[0], '', eventsMap[key], data);\n                    }\n                }\n            }\n            return this;\n        }\n\n        if (typeof selector !== 'string') {\n            callback = selector;\n            selector = '';\n        }\n\n        if (!this.events.hasOwnProperty(eventName)) {\n            const useCapture = NOT_CAPTURED_EVENTS.indexOf(eventName) === -1;\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\n\n            this.events[eventName] = {};\n        }\n\n        if (!this.events[eventName].hasOwnProperty(selector)) {\n            this.events[eventName][selector] = [];\n        }\n\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\n            this.events[eventName][selector].push(callback);\n        }\n\n        if (data) {\n            if (!this.eventData.hasOwnProperty(eventName)) {\n                this.eventData[eventName] = {};\n            }\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\n                this.eventData[eventName][selector] = data;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onEvent(event) {\n        console.log('Handling event', event.type, event);\n\n        let isPropagationStopped = false;\n        let stopPropagation = event.stopPropagation;\n        event.stopPropagation = function () {\n            stopPropagation.call(event);\n            isPropagationStopped = true;\n        };\n\n        if (event.detail.data) {\n            event._contextMenuData = event.detail.data;\n        } else {\n            event._contextMenuData = this.contextMenuData;\n        }\n\n        let target = event.target;\n\n        console.log(event.target);\n\n        const events = this.events[event.type.toLowerCase()];\n        const eventData = this.eventData[event.type.toLowerCase()];\n\n        if (event.type === 'contextmenu:focus') {\n            console.group('focusstack');\n        }\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target && target !== this.el && isPropagationStopped === false) {\n            console.log('find target for ' + event.type, target);\n\n            for (let selector in events) {\n                if (\n                    selector && eventData && eventData.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    event._extraContextMenuData = eventData[selector];\n                }\n\n                if (selector && events.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\n                    this.context = target;\n                    console.log('find target for ' + event.type + '- FOUND ' + selector, target);\n                    this.callAll(events[selector], event, this.context);\n                }\n            }\n            target = target.parentElement;\n            if (isPropagationStopped === true) {\n                break;\n            }\n        }\n        if (event.type === 'contextmenu:focus') {\n            console.groupEnd();\n        }\n        if (isPropagationStopped === false && events.hasOwnProperty('')) {\n            console.log('calling all');\n            this.callAll(events[''], event, this.context);\n        }\n    }\n\n    callAll(callbacks, event, context) {\n        for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i].call(context, event);\n        }\n    }\n}\n\nmodule.exports = ContextMenuEventListener;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventListener.js","/**\n * @class ContextMenuHelper\n * @classdesc Few helper static functions\n */\nexport default class ContextMenuHelper {\n    static matchesSelector(el, selector) {\n        const method =\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n        return method.call(el, selector);\n    }\n\n    /**\n     * Calculates zIndex of an element\n     * @memberOf ContextMenuHelper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf ContextMenuHelper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {Object<string, ContextMenuEventListener>} listeners - ContextMenuEventListener on this item.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ContextMenuItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ContextMenuItemTypes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n * @property {Object<string, ContextMenuEventListener>} listeners - All defined ContextMenuEventListener for this menu\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\nimport defaults from '../defaults';\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\nimport ContextMenuEventListener from './ContextMenuEventListener';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new ContextMenuHtml5Builder();\n        this.defaults = defaults;\n        this.handler = new ContextMenuEventHandler();\n        this.operations = new ContextMenuOperations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu equest to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n                }\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                $(o.context).off(o.ns);\n                return true;\n            });\n        } else if (!options.selector) {\n            $(document).off('.contextMenu .contextMenuAutoHide');\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n                $(o.context).off(o.ns);\n            });\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            $('#context-menu-layer, .context-menu-list').remove();\n        } else if (this.namespaces[options.selector]) {\n            $visibleMenu = $('.context-menu-list').filter(':visible');\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\n                this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\n            }\n\n            if (this.menus[this.namespaces[options.selector]].$menu) {\n                this.menus[this.namespaces[options.selector]].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        if (typeof options.listeners === 'undefined') {\n            options.listeners = {\n                document: new ContextMenuEventListener(document, options)\n            };\n        }\n\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\n\n            // make sure item click is registered first\n            options.listeners.document\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave)\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter);\n\n            options.listeners.document\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave)\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter);\n\n            options.listeners.document.on('mouseup', '.context-menu-input', this.handler.inputClick);\n\n            this.initialized = true;\n        }\n\n        if (options._hasContext) {\n            options.listeners.context = new ContextMenuEventListener(options.context.get(0), options);\n        } else {\n            options.listeners.context = options.listeners.document;\n        }\n\n        // engage native contextmenu event\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.listeners.context\n                    .on('mouseenter', options.selector, this.handler.mouseenter)\n                    .on('mouseleave', options.selector, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.listeners.context.on('click', options.selector, this.handler.click);\n                break;\n            case 'touchstart':\n                options.listeners.context.on('touchstart', options.selector, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Triggers an event on the instance's element.\n     *\n     * @param {Element} el Element to trigger on\n     * @param {string} eventName Name of the event to trigger.\n     * @param {Object} data Optional event data to be added to the event object.\n     * @param {boolean} bubbles\n     * @param {boolean} cancelable\n     *\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\n     */\n    triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\n        console.log('Trigger', eventName, 'on', el);\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\n        el.dispatchEvent(event);\n        return !event.defaultPrevented;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenu.js","import ContextMenuHelper from './ContextMenuHelper';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\nimport ContextMenuEventListener from './ContextMenuEventListener';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(e.target);\n        const css = {};\n\n        // hide any open menus\n        let layer = document.getElementById('#context-menu-layer');\n        if (layer) {\n            menuData.manager.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\n        }\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        menuData.manager.operations.update.call($trigger, e, menuData);\n\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            menuData.manager.triggerEvent($trigger.get(0), 'contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        menuData.listeners.document.off('keydown').on('keydown', menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            // @todo this overwrites mousemove?\n            menuData.listeners.contextMenuAutoHide.on('mousemove', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            menuData.manager.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n\n        // remove selected @todo trigger multiple?\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        menuData.listeners.contextMenuAutoHide.destruct();\n        menuData.listeners.document.off('keydown');\n\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\n                let manager = menuData.manager;\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {}\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    manager.triggerEvent($trigger.get(0), 'contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            if (typeof item.listeners === 'undefined') {\n                item.listeners = {};\n            }\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        $t.addClass('item-' + item.name);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    item.listeners.input = new ContextMenuEventListener($input.get(0), rootMenuData);\n                    item.listeners.input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        item.listeners.input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                // @todo what event?\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e._contextMenuData.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n            }\n        });\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this);\n\n        menuData.listeners.layer = new ContextMenuEventListener($layer.get(0), menuData);\n        menuData.listeners.layer\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    console.log('Position', $menu);\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\n * @class ContextMenuHtml5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class ContextMenuHtml5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\nimport ContextMenuEventListener from './ContextMenuEventListener'\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} _contextMenuData\n */\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(this);\n\n        if (!e._contextMenuData) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e._contextMenuData.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e._contextMenuData.trigger !== 'right' && e._contextMenuData.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e._contextMenuData.trigger === 'left' && e.mouseButton === 0) && !(e._contextMenuData.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e._contextMenuData.$menu.trigger(evt);\n\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            if (e._contextMenuData.build) {\n                const built = e._contextMenuData.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e._contextMenuData = $.extend(true, {}, defaults, e._contextMenuData, built || {});\n\n                // abort if there are no items to display\n                if (!e._contextMenuData.items || $.isEmptyObject(e._contextMenuData.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e._contextMenuData.$trigger = e._contextMenuData.manager.handler.$currentTrigger;\n\n                e._contextMenuData.manager.operations.create(e, e._contextMenuData);\n            }\n            let showMenu = false;\n\n            Object.keys(e._contextMenuData.items).forEach((key) => {\n                let visible;\n                if (typeof e._contextMenuData.items[key].visible === 'function') {\n                    visible = e._contextMenuData.items[key].visible.call($this, e, key, e._contextMenuData, e._contextMenuData);\n                } else if (typeof e._contextMenuData.items[key].visible !== 'undefined') {\n                    visible = e._contextMenuData.items[key].visible === true;\n                } else {\n                    visible = true;\n                }\n                if (visible) {\n                    showMenu = true;\n                }\n            });\n\n            if (showMenu) {\n                // show menu\n                e._contextMenuData.manager.operations.show.call($this, e, e._contextMenuData, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && !e._contextMenuData.manager.handler.$currentTrigger.is($this)) {\n            e._contextMenuData.manager.triggerEvent(e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e._contextMenuData, originalEvent: e});\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e._contextMenuData.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && e._contextMenuData.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\n            e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n        e._contextMenuData.manager.handler.hoveract.data = e._contextMenuData;\n        //\n        // console.log('========== temp mouseenter');\n        // let eventListener = new ContextMenuEventListener(document, e._contextMenuData);\n        // eventListener.on('mousemove', e._contextMenuData.manager.handler.mousemove);\n        // e._contextMenuData.manager.handler.hoveract.timer = setTimeout(() => {\n        //     e._contextMenuData.manager.handler.hoveract.timer = null;\n        //     eventListener.off('mousemove');\n        //     eventListener.destruct();\n        //     eventListener = null;\n        //     e._contextMenuData.manager.handler.$currentTrigger = $this;\n        //     e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {\n        //         data: e._contextMenuData.manager.handler.hoveract.data,\n        //         pageX: e._contextMenuData.manager.handler.hoveract.pageX,\n        //         pageY: e._contextMenuData.manager.handler.hoveract.pageY\n        //     });\n        // }, e._contextMenuData.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e._contextMenuData.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e._contextMenuData.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        /** @var ContextMenuData **/\n        let root = e._contextMenuData;\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                root.manager.triggerEvent(target, e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e._contextMenuData.manager.handler.$currentTrigger) {\n            rootMenuData = e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    rootMenuData.manager.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\n                    // @todo weird event?\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    let eventName = rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup';\n                    rootMenuData.manager.triggerEvent(rootMenuData.accesskeys[k].$node.get(0), eventName, {data: rootMenuData, originalEvent: e});\n\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.get(0).dispatchEvent(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        console.log('menuMouseenter');\n        let root = e._contextMenuData;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = e._contextMenuData;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        console.log('itemMouseenter');\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n        // @todo trigger?\n        let children = targetMenu.$menu\n            .children('.' + rootMenuData.classNames.hover);\n\n        children.each((i, e) => {\n            console.log('Blur itemMouseenter');\n            rootMenuData.manager.triggerEvent(e, 'contextmenu:blur', {data: targetMenu, originalEvent: e}, false);\n        });\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                console.log('blur itemmouseleave');\n                rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            return;\n        }\n\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n            return;\n        }\n\n        console.log('blur itemmouseleave 2', this);\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:blur', {data: currentMenuData});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        let $element = $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent()\n            .find('.context-menu-item')\n            .not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover);\n\n        if ($element.length > 0) {\n            console.log('blur focusitem list', $element, $this)\n            $element.each(function (i, e) {\n                console.log('blur focusitem ');\n                rootMenuData.manager.triggerEvent(e, 'contextmenu:blur', {data: currentMenuData}, false);\n            });\n        }\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            console.log('Focus and position', $this.get(0), currentMenuData.$node.get(0), currentMenuData.$menu.get(0));\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        console.log('bluritem', this);\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}