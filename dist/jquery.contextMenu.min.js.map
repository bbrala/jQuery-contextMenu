{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ca6a7c359bdb9d06d374","webpack:///./src/js/classes/ContextMenuEventListener.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenu.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_ContextMenuHelper","CAPTURED_EVENTS","ContextMenuEventListener","el","contextMenuData","_classCallCheck","window","instanceId","console","log","events","eventData","_onEvent","bind","keys","forEach","eventName","useCapture","indexOf","removeEventListener","context","selector","callback","length","splice","data","arguments","undefined","eventsMap","key","split","on","addEventListener","push","event","isPropagationStopped","stopPropagation","detail","_contextMenuData","target","type","toLowerCase","_ContextMenuHelper2","default","matchesSelector","_extraContextMenuData","callAll","parentElement","callbacks","ContextMenuHelper","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","$t","zin","$tt","Math","max","parseInt","css","parent","prop","val","k","t","charAt","toUpperCase","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","$","noop","activated","items","build","types","determinePosition","position","positionSubmenu","manager","_ContextMenu2","contextMenu","operation","options","execute","getInputValues","currentMenuData","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","ContextMenu","ContextMenuItemTypes","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","normalizedArguments","normalizeArguments","update","create","destroy","html5","Error","buildOptions","document","body","each","id","_this","$visibleMenu","_hasContext","ns","is","filter","contextMenuRoot","$trigger","find","triggerEvent","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","listeners","_ContextMenuEventListener2","contextMenuAutoHide","itemClick","itemClickEvent","hideMenu","prevItem","nextItem","abortevent","menuMouseenter","menuMouseleave","focusItem","blurItem","itemMouseenter","itemMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","first","inputs","item","value","selected","$input","bubbles","cancelable","CustomEvent","dispatchEvent","defaultPrevented","ContextMenuOperations","e","menuData","x","y","getElementById","additionalZValue","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","destruct","rootMenuData","accesskeys","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","$label","_ContextMenuItemTypes2","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","hasTypes","attr","height","prependTo","then","processPromises","input","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","ceil","width","minWidth","maxWidth","index","resize","addBack","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","builder","nodeName","label","inputLabel","clone","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","originalEvent","mouseButton","hasClass","built","showMenu","button","$related","relatedTarget","closest","eventListener","mousemove","timer","clearTimeout","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","targetZIndex","getZIndexOfTriggerTarget","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","$element","join","not","$o","Event","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca6a7c359bdb9d06d374","'use strict';\r\nimport Helper from './ContextMenuHelper';\r\n\r\nconst CAPTURED_EVENTS = ['blur', 'focus', 'mouseenter', 'mouseleave', 'click', 'mouseup', 'mousedown', 'selectstart'];\r\n\r\n/**\r\n * Listens to events dispatched to an element or its children.\r\n *\r\n * @param {Element} el The element to listen to.\r\n * @param {ContextMenuData} contextMenuData ContextMenuData of menu this is bound to\r\n * @param {Element} context Optional context in which to execute the callbacks.\r\n */\r\nclass ContextMenuEventListener {\r\n    constructor(el, contextMenuData) {\r\n        if (!window.instanceId) {\r\n            window.instanceId = 0;\r\n        }\r\n        this.instanceId = window.instanceId++;\r\n        console.log('New listener', el, this.instanceId);\r\n\r\n        this.contextMenuData = contextMenuData || null;\r\n        this.el = el;\r\n        this.events = {};\r\n        this.eventData = {};\r\n        this._onEvent = this._onEvent.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Destructor.\r\n     *\r\n     * Removes all event listeners and cleans up all references.\r\n     */\r\n    destruct() {\r\n        if (this.events !== null) {\r\n            Object.keys(this.events).forEach(function (eventName) {\r\n                let useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\r\n                this.el.removeEventListener(eventName, this._onEvent, useCapture);\r\n            }, this);\r\n        }\r\n\r\n        this.context = null;\r\n        this.contextMenuData = null;\r\n        this.el = null;\r\n        this.events = null;\r\n        this.eventData = null;\r\n    }\r\n\r\n    /**\r\n     * Stops listening to an event.\r\n     *\r\n     * The arguments are the same as for on(), but when no callback is given, all callbacks for the\r\n     * given event and class are discarded.\r\n     * @param {string} eventName\r\n     * @param {string?} selector\r\n     * @param {Function?} callback\r\n     *\r\n     * @returns {ContextMenuEventListener}\r\n     */\r\n    off(eventName, selector, callback) {\r\n        // console.log('Off', eventName, selector, callback);\r\n        if (typeof selector !== 'string') {\r\n            callback = selector;\r\n            selector = '';\r\n        }\r\n\r\n        if (callback) {\r\n            let events = this.events[eventName];\r\n            if (events) {\r\n                events = events[selector];\r\n                if (events) {\r\n                    for (let i = 0; i < events.length; i++) {\r\n                        if (events[i] === callback) {\r\n                            events.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.events.hasOwnProperty(eventName) && this.events[eventName].hasOwnProperty(selector)) {\r\n                this.events[eventName][selector] = [];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Starts listening to an event.\r\n     *\r\n     * @param {string} eventName Name of the event to listen to, in lower-case.\r\n     * @param {string} selector Optional CSS selector. If given, only events inside a child element matching\r\n     *                 the selector are caught.\r\n     * @param {Function} callback Callback to invoke when the event is caught.\r\n     *\r\n     * Alternatively, the arguments may be provided using a map to start listening to multiple\r\n     * events at once. Here, the keys of the map are eventNames and the values are callbacks.\r\n     * Selectors may be specified by separating them from the event name with a space. For example:\r\n     *\r\n     *     .on({\r\n     *         'blur': this._blurred,\r\n     *         'click .some-input': this._inputClicked,\r\n     *     })\r\n     * @param {Object} data\r\n     * @return {this}\r\n     */\r\n    on(eventName, selector, callback, data = false) {\r\n        console.log('On', eventName, selector, this.instanceId);\r\n        if (typeof eventName !== 'string') {\r\n            const eventsMap = eventName;\r\n            for (let key in eventsMap) {\r\n                if (eventsMap.hasOwnProperty(key)) {\r\n                    const split = key.split(' ');\r\n                    if (split.length > 1) {\r\n                        this.on(split[0], split[1], eventsMap[key], data);\r\n                    } else {\r\n                        this.on(split[0], '', eventsMap[key], data);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n\r\n        if (typeof selector !== 'string') {\r\n            callback = selector;\r\n            selector = '';\r\n        }\r\n\r\n        if (!this.events.hasOwnProperty(eventName)) {\r\n            const useCapture = CAPTURED_EVENTS.indexOf(eventName) > -1;\r\n            this.el.addEventListener(eventName, this._onEvent, useCapture);\r\n\r\n            this.events[eventName] = {};\r\n        }\r\n\r\n        if (!this.events[eventName].hasOwnProperty(selector)) {\r\n            this.events[eventName][selector] = [];\r\n        }\r\n\r\n        if (this.events[eventName][selector].indexOf(callback) < 0) {\r\n            this.events[eventName][selector].push(callback);\r\n        }\r\n\r\n        if (data) {\r\n            if (!this.eventData.hasOwnProperty(eventName)) {\r\n                this.eventData[eventName] = {};\r\n            }\r\n            if (!this.eventData[eventName].hasOwnProperty(selector)) {\r\n                this.eventData[eventName][selector] = data;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Event} event\r\n     * @private\r\n     */\r\n    _onEvent(event) {\r\n        let isPropagationStopped = false;\r\n        let stopPropagation = event.stopPropagation;\r\n        event.stopPropagation = function () {\r\n            stopPropagation.call(event);\r\n            isPropagationStopped = true;\r\n        };\r\n\r\n        if (event.detail.data) {\r\n            event._contextMenuData = event.detail.data;\r\n        } else {\r\n            event._contextMenuData = this.contextMenuData;\r\n        }\r\n\r\n        let target = event.target;\r\n        const events = this.events[event.type.toLowerCase()];\r\n        const eventData = this.eventData[event.type.toLowerCase()];\r\n\r\n        // eslint-disable-next-line no-unmodified-loop-condition\r\n        while (target && target !== this.el && isPropagationStopped === false) {\r\n            for (let selector in events) {\r\n                if (\r\n                    selector && eventData && eventData.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\r\n                    event._extraContextMenuData = eventData[selector];\r\n                }\r\n\r\n                if (selector && events.hasOwnProperty(selector) && Helper.matchesSelector(target, selector)) {\r\n                    this.context = target;\r\n                    this.callAll(events[selector], event, this.context);\r\n                }\r\n            }\r\n            target = target.parentElement;\r\n            if (isPropagationStopped === true) {\r\n                break;\r\n            }\r\n        }\r\n        if (isPropagationStopped === false && events.hasOwnProperty('')) {\r\n            console.log('calling all');\r\n            this.callAll(events[''], event, this.context);\r\n        }\r\n    }\r\n\r\n    callAll(callbacks, event, context) {\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            callbacks[i].call(context, event);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ContextMenuEventListener;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventListener.js","/**\r\n * @class ContextMenuHelper\r\n * @classdesc Few helper static functions\r\n */\r\nexport default class ContextMenuHelper {\r\n    static matchesSelector(el, selector) {\r\n        const method =\r\n            el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\r\n        return method.call(el, selector);\r\n    }\r\n\r\n    /**\r\n     * Calculates zIndex of an element\r\n     * @memberOf ContextMenuHelper\r\n     * @method zindex\r\n     * @static\r\n     * @param {JQuery} $t - Element to calculate z-index of.\r\n     * @return {number} - Elements zIndex\r\n     */\r\n    static zindex($t) {\r\n        let zin = 0;\r\n        let $tt = $t;\r\n\r\n        while (true) {\r\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\r\n            $tt = $tt.parent();\r\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\r\n                break;\r\n            }\r\n        }\r\n        return zin;\r\n    }\r\n\r\n    /**\r\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\r\n     * @memberOf ContextMenuHelper\r\n     * @method splitAccesskey\r\n     * @static\r\n     * @param {string} val - Accesskey value\r\n     * @return {Array} - Seperate keys to handle as accesskey\r\n     */\r\n    static splitAccesskey(val) {\r\n        let t = val.split(/\\s+/);\r\n        let keys = [];\r\n\r\n        for (let i = 0, k; k = t[i]; i++) {\r\n            k = k.charAt(0).toUpperCase(); // first character only\r\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\r\n            // a map to look up already used access keys would be nice\r\n            keys.push(k);\r\n        }\r\n\r\n        return keys;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\r\n * @class ContextMenuItem\r\n * @instance\r\n * @interface\r\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\r\n\r\n ```javascript\r\n var items = {\r\n  firstCommand: itemOptions,\r\n  separator1: \"-----\",\r\n  separator2: { \"type\": \"cm_separator\" },\r\n  command2: itemOptions,\r\n  submenu: {\r\n    type: \"submenu\"\r\n    submenuItem1: itemOptions,\r\n    submenuItem2: itemOptions,\r\n  }\r\n}\r\n ```\r\n\r\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\r\n\r\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\r\n\r\n *\r\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\r\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\r\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\r\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\r\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\r\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\r\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\r\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\r\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\r\n * @property {string} accesskey - Character(s) to be used as accesskey.\r\n\r\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\r\n\r\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\r\n *\r\n * @property {?JQuery} $input - The input element if it was build for this item.\r\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\r\n * @property {string} value - The value of the `<input>` element.\r\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\r\n * @property {string} radio - Specifies the group of the `radio` element.\r\n * @property {string} options - Specifies the options of the `select` element.\r\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\r\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\r\n * @property {Object<string, ContextMenuEventListener>} listeners - ContextMenuEventListener on this item.\r\n */\r\n\r\n/**\r\n * Possible ContextMenuItem types\r\n * @enum string\r\n */\r\nconst ContextMenuItemTypes = {\r\n    /**\r\n     * The command is a simple clickable item.\r\n     */\r\n    simple: '',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    text: 'text',\r\n\r\n    /**\r\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    textarea: 'textarea',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    checkbox: 'checkbox',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    radio: 'radio',\r\n\r\n    /**\r\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    select: 'select',\r\n\r\n    /**\r\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\r\n     */\r\n    html: 'html',\r\n\r\n    /**\r\n     * Internal property, used internally when the type is set to a string.\r\n     */\r\n    separator: 'cm_separator',\r\n\r\n    /**\r\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\r\n     */\r\n    submenu: 'sub'\r\n};\r\n\r\nexport default ContextMenuItemTypes;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","import {determinePosition, positionSubmenu, position} from './position';\r\n\r\n/**\r\n * @class ContextMenuData\r\n * @augments ContextMenuOptions\r\n * @instance\r\n * @interface\r\n *\r\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\r\n * @property {JQuery} $layer - The opened layer when the menu is opened.\r\n * @property {JQuery} $node - The menu node.\r\n * @property {JQuery} $trigger - The element that triggered opening the menu.\r\n * @property {JQuery} $selected - Reference to the `<li>` command element.\r\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\r\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\r\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\r\n * @property {ContextMenu} manager - The contextmenu manager instance.\r\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\r\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\r\n * @property {?boolean} isInput - We are currently originating events from an input.\r\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\r\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\r\n * @property {Object<string, ContextMenuEventListener>} listeners - All defined ContextMenuEventListener for this menu\r\n *\r\n * @property {boolean} hovering Currently hovering, root menu only.\r\n */\r\n\r\n/**\r\n * @class ContextMenuOptions\r\n * @instance\r\n * @interface\r\n * @classdesc\r\n ## Register new contextMenu\r\n\r\n To register a new contextMenu:\r\n\r\n ```javascript\r\n $.contextMenu( contextMenuOptions );\r\n ```\r\n\r\n ## Update contextMenu state\r\n\r\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\r\n\r\n ```javascript\r\n $('.context-menu-one').contextMenu('update'); // update single menu\r\n $.contextMenu('update') // update all open menus\r\n ```\r\n\r\n * @property {null|string} selector - Selector on which the contextMenu triggers.\r\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\r\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\r\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\r\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\r\n\r\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\r\n\r\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\r\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\r\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\r\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\r\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\r\n * @property {number|Function} zIndex=1 - offset to add to zIndex\r\n * @property {string} className - Class to be appended to the root menu.\r\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\r\n * @property {string} classNames.hover=context-menu-hover\r\n * @property {string} classNames.disabled=context-menu-disabled\r\n * @property {string} classNames.visible=context-menu-visible\r\n * @property {string} classNames.notSelectable=context-menu-not-selectable\r\n * @property {string} classNames.icon=context-menu-icon\r\n * @property {string} classNames.iconEdit=context-menu-icon-edit\r\n * @property {string} classNames.iconCut=context-menu-icon-cut\r\n * @property {string} classNames.iconCopy=context-menu-icon-copy\r\n * @property {string} classNames.iconPaste=context-menu-icon-paste\r\n * @property {string} classNames.iconDelete=context-menu-icon-delete\r\n * @property {string} classNames.iconAdd=context-menu-icon-add\r\n * @property {string} classNames.iconQuit=context-menu-icon-quit\r\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\r\n * @property {Object} animation - Animation settings\r\n * @property {number} animation.duration=50\r\n * @property {string} animation.show='slideDown'\r\n * @property {string} animation.hide='slideUp'\r\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\r\n * @property {Function} events.show - Called when contextmenu is shown.\r\n * @property {Function} events.hide - Called when contextmenu is hidden.\r\n * @property {Function} events.activated - Called when contextmenu is activated.\r\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\r\n * @property {ContextMenuBuildCallback} build=false\r\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\r\n\r\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\r\n\r\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\r\n\r\n * @property {(determinePosition)} determinePosition\r\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\r\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\r\n */\r\nexport default {\r\n    selector: null,\r\n\r\n    // where to append the menu to\r\n    appendTo: null,\r\n\r\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\r\n    trigger: 'right',\r\n\r\n    // hide menu when mouse leaves trigger / menu elements\r\n    autoHide: false,\r\n\r\n    // ms to wait before showing a hover-triggered context menu\r\n    delay: 200,\r\n\r\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\r\n    // as long as the trigger happened on one of the trigger-element's child nodes\r\n    reposition: true,\r\n\r\n    // Flag denoting if a second trigger should close the menu, as long as\r\n    // the trigger happened on one of the trigger-element's child nodes.\r\n    // This overrides the reposition option.\r\n    hideOnSecondTrigger: false,\r\n\r\n    // ability to select submenu\r\n    selectableSubMenu: false,\r\n\r\n    className: '',\r\n\r\n    // Default classname configuration to be able avoid conflicts in frameworks\r\n    classNames: {\r\n        hover: 'context-menu-hover', // Item hover\r\n        disabled: 'context-menu-disabled', // Item disabled\r\n        visible: 'context-menu-visible', // Item visible\r\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\r\n\r\n        icon: 'context-menu-icon',\r\n        iconEdit: 'context-menu-icon-edit',\r\n        iconCut: 'context-menu-icon-cut',\r\n        iconCopy: 'context-menu-icon-copy',\r\n        iconPaste: 'context-menu-icon-paste',\r\n        iconDelete: 'context-menu-icon-delete',\r\n        iconAdd: 'context-menu-icon-add',\r\n        iconQuit: 'context-menu-icon-quit',\r\n        iconLoadingClass: 'context-menu-icon-loading'\r\n    },\r\n\r\n    // offset to add to zIndex\r\n    zIndex: 1,\r\n\r\n    // show hide animation settings\r\n    animation: {\r\n        duration: 50,\r\n        show: 'slideDown',\r\n        hide: 'slideUp'\r\n    },\r\n\r\n    // events\r\n    events: {\r\n        show: $.noop,\r\n        hide: $.noop,\r\n        activated: $.noop\r\n    },\r\n\r\n    // default callback\r\n    callback: null,\r\n\r\n    // list of contextMenu items\r\n    items: {},\r\n\r\n    // Build callback for creating a menu dynamicly\r\n    build: false,\r\n\r\n    types: {},\r\n\r\n    // determine position to show menu at\r\n    determinePosition,\r\n\r\n    // position menu\r\n    position,\r\n\r\n    // position the sub-menu\r\n    positionSubmenu\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\r\nimport '../sass/jquery.contextMenu.scss';\r\nimport ContextMenu from './classes/ContextMenu';\r\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\r\nimport elementFunction from './jquery/contextMenuFunction';\r\n\r\n/**\r\n * The jQuery namespace.\r\n * @external \"jQuery\"\r\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\r\n */\r\n\r\n/**\r\n * @class jQuery.contextMenu\r\n * @function external:jQuery.contextMenu\r\n * @instance\r\n *\r\n * @param {string} operation\r\n * @param {ContextMenuOptions} options\r\n *\r\n * @property {ContextMenu} manager\r\n * @property {getInputValues} getInputValues\r\n * @property {setInputValues} setInputValues\r\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\r\n * @property {ContextMenuOptions} defaults\r\n * @property {ContextMenuEventHandler} handle\r\n * @property {ContextMenuOperations} operations\r\n * @property {Object<string, ContextMenuData>} menus\r\n */\r\nconst manager = new ContextMenu();\r\n\r\n// manage contextMenu instances\r\nlet contextMenu = function (operation, options) {\r\n    manager.execute(operation, options);\r\n};\r\n\r\ncontextMenu.getInputValues = function (currentMenuData, data) {\r\n    return manager.getInputValues(currentMenuData, data);\r\n};\r\ncontextMenu.setInputValues = function (currentMenuData, data) {\r\n    return manager.getInputValues(currentMenuData, data);\r\n};\r\ncontextMenu.fromMenu = function (element) {\r\n    return manager.html5builder.fromMenu(element);\r\n};\r\n\r\n// make defaults accessible\r\ncontextMenu.defaults = manager.defaults;\r\ncontextMenu.types = manager.defaults.types;\r\ncontextMenu.manager = manager;\r\n\r\n// export internal functions - undocumented, for hacking only!\r\ncontextMenu.handle = manager.handler;\r\ncontextMenu.operations = manager.operations;\r\ncontextMenu.menus = manager.menus;\r\ncontextMenu.namespaces = manager.namespaces;\r\n\r\n$.fn.contextMenu = elementFunction;\r\n$.contextMenu = contextMenu;\r\n\r\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\r\nimport defaults from '../defaults';\r\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\r\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\r\nimport ContextMenuEventListener from './ContextMenuEventListener';\r\n\r\nexport default class ContextMenu {\r\n    /**\r\n     * @constructor\r\n     * @constructs ContextMenu\r\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\r\n     * @class ContextMenu\r\n     *\r\n     * @example\r\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\r\n     * const manager = new ContextMenu();\r\n     * manager.execute(\"create\", options);\r\n     *\r\n     * @property {ContextMenuOptions|Object} defaults\r\n     * @property {ContextMenuEventHandler} handle\r\n     * @property {ContextMenuOperations} operations\r\n     * @property {Object<string, ContextMenuData>} menus\r\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\r\n     * @property {boolean} initialized - Flag the menu as initialized.\r\n     */\r\n    constructor() {\r\n        this.html5builder = new ContextMenuHtml5Builder();\r\n        this.defaults = defaults;\r\n        this.handler = new ContextMenuEventHandler();\r\n        this.operations = new ContextMenuOperations();\r\n        this.namespaces = {};\r\n        this.initialized = false;\r\n        this.menus = {};\r\n        this.counter = 0;\r\n    }\r\n\r\n    /**\r\n     * @method execute\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {(string|ContextMenuOptions)} operation\r\n     * @param {(string|ContextMenuOptions)} options\r\n     * @return {ContextMenu}\r\n     */\r\n    execute(operation, options) {\r\n        const normalizedArguments = this.normalizeArguments(operation, options);\r\n        operation = normalizedArguments.operation;\r\n        options = normalizedArguments.options;\r\n\r\n        switch (operation) {\r\n            case 'update':\r\n                // Updates visibility and such\r\n                this.update(options);\r\n                break;\r\n\r\n            case 'create':\r\n                // no selector no joy\r\n                this.create(options);\r\n                break;\r\n\r\n            case 'destroy':\r\n                this.destroy(options);\r\n                break;\r\n\r\n            case 'html5':\r\n                this.html5(options);\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown operation \"' + operation + '\"');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\r\n     * @method html5\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {ContextMenuOptions|boolean} options\r\n     */\r\n    html5(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\r\n\r\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\r\n            $('menu[type=\"context\"]').each(function () {\r\n                if (this.id) {\r\n                    $.contextMenu({\r\n                        selector: '[contextmenu=' + this.id + ']',\r\n                        items: $.contextMenu.fromMenu(this)\r\n                    });\r\n                }\r\n            }).css('display', 'none');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy the ContextMenu\r\n     * @method destroy\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    destroy(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        let $visibleMenu;\r\n        if (options._hasContext) {\r\n            // get proper options\r\n            const context = options.context;\r\n\r\n            Object.keys(this.menus).forEach((ns) => {\r\n                let o = this.menus[ns];\r\n\r\n                if (!o) {\r\n                    return true;\r\n                }\r\n\r\n                // Is this menu equest to the context called from\r\n                if (!$(context).is(o.selector)) {\r\n                    return true;\r\n                }\r\n\r\n                $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\r\n                    this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\r\n                }\r\n\r\n                if (this.menus[o.ns].$menu) {\r\n                    this.menus[o.ns].$menu.remove();\r\n                }\r\n                delete this.menus[o.ns];\r\n\r\n                $(o.context).off(o.ns);\r\n                return true;\r\n            });\r\n        } else if (!options.selector) {\r\n            $(document).off('.contextMenu .contextMenuAutoHide');\r\n\r\n            Object.keys(this.menus).forEach((ns) => {\r\n                let o = this.menus[ns];\r\n                $(o.context).off(o.ns);\r\n            });\r\n\r\n            this.namespaces = {};\r\n            this.menus = {};\r\n            this.counter = 0;\r\n            this.initialized = false;\r\n\r\n            $('#context-menu-layer, .context-menu-list').remove();\r\n        } else if (this.namespaces[options.selector]) {\r\n            $visibleMenu = $('.context-menu-list').filter(':visible');\r\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\r\n                this.triggerEvent($visibleMenu.get(0), 'contextmenu:hide', {force: true});\r\n            }\r\n\r\n            if (this.menus[this.namespaces[options.selector]].$menu) {\r\n                this.menus[this.namespaces[options.selector]].$menu.remove();\r\n            }\r\n            delete this.menus[this.namespaces[options.selector]];\r\n\r\n            $(document).off(this.namespaces[options.selector]);\r\n        }\r\n        this.handler.$currentTrigger = null;\r\n    }\r\n\r\n    /**\r\n     * Create a ContextMenu\r\n     * @method create\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    create(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        if (!options.selector) {\r\n            throw new Error('No selector specified');\r\n        }\r\n        // make sure internal classes are not bound to\r\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\r\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\r\n        }\r\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\r\n            throw new Error('No Items specified');\r\n        }\r\n        this.counter++;\r\n        options.ns = '.contextMenu' + this.counter;\r\n        if (!options._hasContext) {\r\n            this.namespaces[options.selector] = options.ns;\r\n        }\r\n        if (typeof options.listeners === 'undefined') {\r\n            options.listeners = {\r\n                document: new ContextMenuEventListener(document, options),\r\n                contextMenuAutoHide: new ContextMenuEventListener(document, options)\r\n            };\r\n        }\r\n\r\n        this.menus[options.ns] = options;\r\n\r\n        // default to right click\r\n        if (!options.trigger) {\r\n            options.trigger = 'right';\r\n        }\r\n\r\n        if (!this.initialized) {\r\n            const itemClick = options.itemClickEvent === 'click' ? 'click' : 'mouseup';\r\n\r\n            // make sure item click is registered first\r\n            options.listeners.document\r\n                .on('contextmenu:hide', '.context-menu-list', this.handler.hideMenu)\r\n                .on('prevcommand', '.context-menu-list', this.handler.prevItem)\r\n                .on('nextcommand', '.context-menu-list', this.handler.nextItem)\r\n                .on('contextmenu', '.context-menu-list', this.handler.abortevent)\r\n                .on('mouseenter', '.context-menu-list', this.handler.menuMouseenter)\r\n                .on('mouseleave', '.context-menu-list', this.handler.menuMouseleave);\r\n\r\n            options.listeners.document\r\n                .on(itemClick, '.context-menu-item', this.handler.itemClick)\r\n                .on('contextmenu:focus', '.context-menu-item', this.handler.focusItem)\r\n                .on('contextmenu:blur', '.context-menu-item', this.handler.blurItem)\r\n                .on('contextmenu', '.context-menu-item', this.handler.abortevent)\r\n                .on('mouseenter', '.context-menu-item', this.handler.itemMouseenter)\r\n                .on('mouseleave', '.context-menu-item', this.handler.itemMouseleave);\r\n\r\n            options.listeners.document.on('mouseup', '.context-menu-input', this.handler.inputClick);\r\n\r\n            this.initialized = true;\r\n        }\r\n\r\n        options.listeners.context = new ContextMenuEventListener(options.context.get(0), options);\r\n\r\n        // engage native contextmenu event\r\n        options.listeners.context.on('contextmenu', options.selector, this.handler.contextmenu);\r\n\r\n        switch (options.trigger) {\r\n            case 'hover':\r\n                options.listeners.context\r\n                    .on('mouseenter', options.selector, this.handler.mouseenter)\r\n                    .on('mouseleave', options.selector, this.handler.mouseleave);\r\n                break;\r\n\r\n            case 'left':\r\n                options.listeners.context.on('click', options.selector, this.handler.click);\r\n                break;\r\n            case 'touchstart':\r\n                options.listeners.context.on('touchstart', options.selector, this.handler.click);\r\n                break;\r\n            /*\r\n                     default:\r\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\r\n                     $document\r\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\r\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\r\n                     break;\r\n                     */\r\n        }\r\n\r\n        // create menu\r\n        if (!options.build) {\r\n            this.operations.create(null, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the ContextMenu or all ContextMenu's\r\n     * @method update\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    update(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        if (options._hasContext) {\r\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\r\n        } else {\r\n            Object.keys(this.menus).forEach((menu) => {\r\n                this.operations.update(null, this.menus[menu]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\r\n     * @method buildOptions\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {ContextMenuOptions} userOptions\r\n     * @return {ContextMenuOptions}\r\n     */\r\n    buildOptions(userOptions) {\r\n        if (typeof userOptions === 'string') {\r\n            userOptions = {selector: userOptions};\r\n        }\r\n\r\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\r\n\r\n        if (!options.context || !options.context.length) {\r\n            options.context = $(document);\r\n            options._hasContext = false;\r\n        } else {\r\n            // you never know what they throw at you...\r\n            options.context = $(options.context).first();\r\n            options._hasContext = !$(options.context).is($(document));\r\n        }\r\n        return options;\r\n    }\r\n\r\n    /**\r\n     * @method normalizeArguments\r\n     * @memberOf ContextMenu\r\n     *\r\n     * @param {string|Object} operation\r\n     * @param {string|Object|ContextMenuOptions} options\r\n     * @returns {{operation: string, options: ContextMenuOptions}}\r\n     */\r\n    normalizeArguments(operation, options) {\r\n        if (typeof operation !== 'string') {\r\n            options = operation;\r\n            operation = 'create';\r\n        }\r\n\r\n        if (typeof options === 'string') {\r\n            options = {selector: options};\r\n        } else if (typeof options === 'undefined') {\r\n            options = {};\r\n        }\r\n        return {operation, options};\r\n    }\r\n\r\n    /**\r\n     * import values into `<input>` commands\r\n     *\r\n     * @method setInputValues\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\r\n     * @param {Object} data - Values to set\r\n     * @return {undefined}\r\n     */\r\n    setInputValues(contextMenuData, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(contextMenuData.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                    item.value = data[key] || '';\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    item.selected = !!data[key];\r\n                    break;\r\n\r\n                case 'radio':\r\n                    item.selected = (data[item.radio] || '') === item.value;\r\n                    break;\r\n\r\n                case 'select':\r\n                    item.selected = data[key] || '';\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * export values from `<input>` commands\r\n     *\r\n     * @method getInputValues\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\r\n     * @param {Object} data - Values object\r\n     * @return {Object} - Values of input elements\r\n     */\r\n    getInputValues(contextMenuData, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(contextMenuData.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                case 'select':\r\n                    data[key] = item.$input.val();\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    data[key] = item.$input.prop('checked');\r\n                    break;\r\n\r\n                case 'radio':\r\n                    if (item.$input.prop('checked')) {\r\n                        data[item.radio] = item.value;\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Triggers an event on the instance's element.\r\n     *\r\n     * @param {Element} el Element to trigger on\r\n     * @param {string} eventName Name of the event to trigger.\r\n     * @param {Object} data Optional event data to be added to the event object.\r\n     * @param {boolean} bubbles\r\n     * @param {boolean} cancelable\r\n     *\r\n     * @return {boolean} Whether the default action of the event may be executed, ie. returns false if preventDefault() has been called.\r\n     */\r\n    triggerEvent(el, eventName, data = {}, bubbles = true, cancelable = true) {\r\n        console.log('Trigger', eventName, 'on', el);\r\n        const event = new CustomEvent(eventName, {detail: data, bubbles: bubbles, cancelable: cancelable});\r\n        el.dispatchEvent(event);\r\n        return !event.defaultPrevented;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenu.js","import ContextMenuHelper from './ContextMenuHelper';\r\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\r\nimport ContextMenuEventListener from './ContextMenuEventListener';\r\n\r\nexport default class ContextMenuOperations {\r\n    /**\r\n     * @constructor\r\n     * @constructs ContextMenuOperations\r\n     */\r\n    constructor() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Show the menu.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    show(e, menuData, x, y) {\r\n        const $trigger = $(e.target);\r\n        const css = {};\r\n\r\n        // hide any open menus\r\n        let layer = document.getElementById('#context-menu-layer');\r\n        if (layer) {\r\n            menuData.manager.triggerEvent(document.getElementById('#context-menu-layer'), 'mousedown');\r\n        }\r\n\r\n        // backreference for callbacks\r\n        menuData.$trigger = $trigger;\r\n\r\n        // show event\r\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\r\n            menuData.manager.handler.$currentTrigger = null;\r\n            return;\r\n        }\r\n\r\n        // create or update context menu\r\n        menuData.manager.operations.update.call($trigger, e, menuData);\r\n\r\n        // position menu\r\n        menuData.position.call($trigger, e, menuData, x, y);\r\n\r\n        // make sure we're in front\r\n        if (menuData.zIndex) {\r\n            let additionalZValue = menuData.zIndex;\r\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\r\n            if (typeof menuData.zIndex === 'function') {\r\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\r\n            }\r\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\r\n        }\r\n\r\n        // add layer\r\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\r\n\r\n        // adjust sub-menu zIndexes\r\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\r\n\r\n        // position and show context menu\r\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\r\n            menuData.manager.triggerEvent($trigger.get(0), 'contextmenu:visible');\r\n\r\n            menuData.manager.operations.activated(e, menuData);\r\n            menuData.events.activated($trigger, e, menuData);\r\n        });\r\n        // make options available and set state\r\n        $trigger\r\n            .data('contextMenu', menuData)\r\n            .addClass('context-menu-active');\r\n\r\n        // register key handler\r\n        menuData.listeners.document.off('keydown').on('keydown', menuData.manager.handler.key);\r\n        // register autoHide handler\r\n        if (menuData.autoHide) {\r\n            // mouse position handler\r\n            menuData.listeners.contextMenuAutoHide.on('mousemove', (e) => {\r\n                // need to capture the offset on mousemove,\r\n                // since the page might've been scrolled since activation\r\n                const pos = $trigger.offset();\r\n                pos.right = pos.left + $trigger.outerWidth();\r\n                pos.bottom = pos.top + $trigger.outerHeight();\r\n\r\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\r\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\r\n                    setTimeout(() => {\r\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\r\n                            menuData.manager.triggerEvent(menuData.$menu.get(0), 'contextmenu:hide');\r\n                        }\r\n                    }, 50);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide the menu.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {boolean} force\r\n     */\r\n    hide(e, menuData, force) {\r\n        const $trigger = $(this);\r\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\r\n            menuData = $trigger.data('contextMenu');\r\n        } else if (typeof menuData !== 'object') {\r\n            return;\r\n        }\r\n\r\n        // hide event\r\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\r\n            return;\r\n        }\r\n\r\n        // remove options and revert state\r\n        $trigger\r\n            .removeData('contextMenu')\r\n            .removeClass('context-menu-active');\r\n\r\n        if (menuData.$layer) {\r\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\r\n            setTimeout((function ($layer) {\r\n                return function () {\r\n                    $layer.remove();\r\n                };\r\n            })(menuData.$layer), 10);\r\n\r\n            try {\r\n                delete menuData.$layer;\r\n            } catch (e) {\r\n                menuData.$layer = null;\r\n            }\r\n        }\r\n\r\n        // remove handle\r\n        menuData.manager.handler.$currentTrigger = null;\r\n        // remove selected @todo trigger multiple?\r\n        console.log('Blur hide');\r\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\r\n        menuData.$selected = null;\r\n        // collapse all submenus\r\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\r\n        // unregister key and mouse handlers\r\n        menuData.listeners.contextMenuAutoHide.destruct();\r\n        menuData.listeners.document.off('keydown');\r\n\r\n        // hide menu\r\n        if (menuData.$menu) {\r\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\r\n                let manager = menuData.manager;\r\n                // tear down dynamically built menu after animation is completed.\r\n                if (menuData.build) {\r\n                    menuData.$menu.remove();\r\n                    Object.keys(menuData).forEach((key) => {\r\n                        switch (key) {\r\n                            case 'ns':\r\n                            case 'selector':\r\n                            case 'build':\r\n                            case 'trigger':\r\n                                return true;\r\n                            default:\r\n                                menuData[key] = undefined;\r\n                                try {\r\n                                    delete menuData[key];\r\n                                } catch (e) {}\r\n                                return true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                setTimeout(function () {\r\n                    manager.triggerEvent($trigger.get(0), 'contextmenu:hidden');\r\n                }, 10);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a menu based on the options. Also created submenus.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} currentMenuData\r\n     * @param {ContextMenuData?} rootMenuData\r\n     */\r\n    create(e, currentMenuData, rootMenuData) {\r\n        if (typeof rootMenuData === 'undefined') {\r\n            rootMenuData = currentMenuData;\r\n        }\r\n\r\n        // create contextMenu\r\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\r\n            'contextMenu': currentMenuData,\r\n            'contextMenuRoot': rootMenuData\r\n        });\r\n\r\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\r\n            currentMenuData[k] = {};\r\n            if (!rootMenuData[k]) {\r\n                rootMenuData[k] = {};\r\n            }\r\n        });\r\n\r\n        if (!rootMenuData.accesskeys) {\r\n            rootMenuData.accesskeys = {};\r\n        }\r\n\r\n        function createNameNode(item) {\r\n            const $name = $('<span></span>');\r\n            if (item._accesskey) {\r\n                if (item._beforeAccesskey) {\r\n                    $name.append(document.createTextNode(item._beforeAccesskey));\r\n                }\r\n                $('<span></span>')\r\n                    .addClass('context-menu-accesskey')\r\n                    .text(item._accesskey)\r\n                    .appendTo($name);\r\n                if (item._afterAccesskey) {\r\n                    $name.append(document.createTextNode(item._afterAccesskey));\r\n                }\r\n            } else {\r\n                if (item.isHtmlName) {\r\n                    // restrict use with access keys\r\n                    if (typeof item.accesskey !== 'undefined') {\r\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\r\n                    }\r\n                    $name.html(item.name);\r\n                } else {\r\n                    $name.text(item.name);\r\n                }\r\n            }\r\n            return $name;\r\n        }\r\n\r\n        // create contextMenu items\r\n        Object.keys(currentMenuData.items).forEach((key) => {\r\n            let item = currentMenuData.items[key];\r\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\r\n            let $label = null;\r\n            let $input = null;\r\n\r\n            // iOS needs to see a click-event bound to an element to actually\r\n            // have the TouchEvents infrastructure trigger the click event\r\n            $t.on('click', $.noop);\r\n\r\n            // Make old school string separator a real item so checks wont be\r\n            // awkward later.\r\n            // And normalize 'cm_separator' into 'cm_separator'.\r\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\r\n                item = {type: ContextMenuItemTypes.separator};\r\n            }\r\n\r\n            item.$node = $t.data({\r\n                'contextMenu': currentMenuData,\r\n                'contextMenuRoot': rootMenuData,\r\n                'contextMenuKey': key\r\n            });\r\n\r\n            if (typeof item.listeners === 'undefined') {\r\n                item.listeners = {};\r\n            }\r\n\r\n            // register accesskey\r\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\r\n            if (typeof item.accesskey !== 'undefined') {\r\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\r\n                for (let i = 0, ak; ak = aks[i]; i++) {\r\n                    if (!rootMenuData.accesskeys[ak]) {\r\n                        rootMenuData.accesskeys[ak] = item;\r\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\r\n                        if (matched) {\r\n                            item._beforeAccesskey = matched[1];\r\n                            item._accesskey = matched[2];\r\n                            item._afterAccesskey = matched[3];\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (item.type && rootMenuData.types[item.type]) {\r\n                // run custom type handler\r\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\r\n                // register commands\r\n                [currentMenuData, rootMenuData].forEach((k) => {\r\n                    k.commands[key] = item;\r\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\r\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\r\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\r\n                        k.callbacks[key] = item.callback;\r\n                    }\r\n                });\r\n            } else {\r\n                // add label for input\r\n                if (item.type === ContextMenuItemTypes.separator) {\r\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\r\n                } else if (item.type === ContextMenuItemTypes.html) {\r\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\r\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\r\n                    $label = $('<label></label>').appendTo($t);\r\n                    createNameNode(item).appendTo($label);\r\n\r\n                    $t.addClass('context-menu-input');\r\n                    currentMenuData.hasTypes = true;\r\n                    [currentMenuData, rootMenuData].forEach((k) => {\r\n                        k.commands[key] = item;\r\n                        k.inputs[key] = item;\r\n                    });\r\n                } else if (item.items) {\r\n                    item.type = ContextMenuItemTypes.submenu;\r\n                }\r\n\r\n                switch (item.type) {\r\n                    case ContextMenuItemTypes.separator:\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.text:\r\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .appendTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.textarea:\r\n                        $input = $('<textarea name=\"\"></textarea>')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .appendTo($label);\r\n\r\n                        if (item.height) {\r\n                            $input.height(item.height);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.checkbox:\r\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .prop('checked', !!item.selected)\r\n                            .prependTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.radio:\r\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + item.radio)\r\n                            .val(item.value || '')\r\n                            .prop('checked', !!item.selected)\r\n                            .prependTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.select:\r\n                        $input = $('<select name=\"\"></select>')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .appendTo($label);\r\n                        if (item.options) {\r\n                            Object.keys(item.options).forEach((value) => {\r\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\r\n                            });\r\n                            $input.val(item.selected);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.submenu:\r\n                        createNameNode(item).appendTo($t);\r\n                        item.appendTo = item.$node;\r\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\r\n                        item.callback = null;\r\n\r\n                        // If item contains items, and this is a promise, we should create it later\r\n                        // check if subitems is of type promise. If it is a promise we need to create\r\n                        // it later, after promise has been resolved.\r\n                        if (typeof item.items.then === 'function') {\r\n                            // probably a promise, process it, when completed it will create the sub menu's.\r\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\r\n                        } else {\r\n                            // normal submenu.\r\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.html:\r\n                        $(item.html).appendTo($t);\r\n                        break;\r\n\r\n                    default:\r\n                        [currentMenuData, rootMenuData].forEach((k) => {\r\n                            k.commands[key] = item;\r\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\r\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\r\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\r\n                                k.callbacks[key] = item.callback;\r\n                            }\r\n                        });\r\n                        createNameNode(item).appendTo($t);\r\n                        break;\r\n                }\r\n\r\n                // disable key listener in <input>\r\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\r\n                    item.listeners.input = new ContextMenuEventListener($input.get(0), rootMenuData);\r\n                    item.listeners.input\r\n                        .on('focus', rootMenuData.manager.handler.focusInput)\r\n                        .on('blur', rootMenuData.manager.handler.blurInput);\r\n\r\n                    if (item.events) {\r\n                        item.listeners.input.on(item.events, currentMenuData);\r\n                    }\r\n                }\r\n\r\n                // add icons\r\n                if (item.icon) {\r\n                    if (typeof item.icon === 'function') {\r\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\r\n                    } else {\r\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\r\n                            // to enable font awesome\r\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\r\n                        } else {\r\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\r\n                        }\r\n                    }\r\n                    $t.addClass(item._icon);\r\n                }\r\n            }\r\n\r\n            // cache contained elements\r\n            item.$input = $input;\r\n            item.$label = $label;\r\n\r\n            // attach item to menu\r\n            $t.appendTo(currentMenuData.$menu);\r\n\r\n            // Disable text selection\r\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\r\n                // browsers support user-select: none,\r\n                // IE has a special event for text-selection\r\n                // browsers supporting neither will not be preventing text-selection\r\n                // @todo what event?\r\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\r\n            }\r\n        });\r\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\r\n        if (!currentMenuData.$node) {\r\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-root');\r\n        }\r\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\r\n    }\r\n\r\n    /**\r\n     * Resize the menu to its content.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent} e\r\n     * @param {JQuery} $menu\r\n     * @param {boolean?} nested\r\n     */\r\n    resize(e, $menu, nested) {\r\n        let domMenu;\r\n        // determine widths of submenus, as CSS won't grow them automatically\r\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\r\n        // kinda sucks hard...\r\n\r\n        // determine width of absolutely positioned element\r\n        $menu.css({position: 'absolute', display: 'block'});\r\n        // don't apply yet, because that would break nested elements' widths\r\n        $menu.data('width',\r\n            (domMenu = $menu.get(0)).getBoundingClientRect\r\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\r\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\r\n        // reset styles so they allow nested elements to grow/shrink naturally\r\n        $menu.css({\r\n            position: 'static',\r\n            minWidth: '0px',\r\n            maxWidth: '100000px'\r\n        });\r\n        // identify width of nested menus\r\n        $menu.find('> li > ul').each((index, element) => {\r\n            e._contextMenuData.manager.operations.resize(e, $(element), true);\r\n        });\r\n        // reset and apply changes in the end because nested\r\n        // elements' widths wouldn't be calculatable otherwise\r\n        if (!nested) {\r\n            $menu.find('ul').addBack().css({\r\n                position: '',\r\n                display: '',\r\n                minWidth: '',\r\n                maxWidth: ''\r\n            }).outerWidth(function () {\r\n                return $(this).data('width');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData?} currentMenuData\r\n     * @param {ContextMenuData?} rootMenuData\r\n     */\r\n    update(e, currentMenuData, rootMenuData) {\r\n        const $trigger = this;\r\n        if (typeof rootMenuData === 'undefined') {\r\n            rootMenuData = currentMenuData;\r\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\r\n        }\r\n        // re-check disabled for each item\r\n        currentMenuData.$menu.children().each(function (index, element) {\r\n            let $item = $(element);\r\n            let key = $item.data('contextMenuKey');\r\n            let item = currentMenuData.items[key];\r\n\r\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\r\n            let visible;\r\n\r\n            if (typeof item.visible === 'function') {\r\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\r\n            } else if (typeof item.visible !== 'undefined') {\r\n                visible = item.visible === true;\r\n            } else {\r\n                visible = true;\r\n            }\r\n            $item[visible ? 'show' : 'hide']();\r\n\r\n            // dis- / enable item\r\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\r\n\r\n            if (typeof item.icon === 'function') {\r\n                $item.removeClass(item._icon);\r\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\r\n                $item.addClass(item._icon);\r\n            }\r\n\r\n            if (item.type) {\r\n                // dis- / enable input elements\r\n                $item.find('input, select, textarea').prop('disabled', disabled);\r\n\r\n                // update input states\r\n                switch (item.type) {\r\n                    case ContextMenuItemTypes.text:\r\n                    case ContextMenuItemTypes.textarea:\r\n                        item.$input.val(item.value || '');\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.checkbox:\r\n                    case ContextMenuItemTypes.radio:\r\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.select:\r\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (item.$menu) {\r\n                // update sub-menu\r\n                rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the overlay layer so we can capture the click outside the menu and close it.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {number} zIndex\r\n     * @returns {jQuery}\r\n     */\r\n    layer(e, menuData, zIndex) {\r\n        const $window = $(window);\r\n\r\n        // add transparent layer for click area\r\n        // filter and background for Internet Explorer, Issue #23\r\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\r\n            .css({\r\n                height: $window.height(),\r\n                width: $window.width(),\r\n                display: 'block',\r\n                position: 'fixed',\r\n                'z-index': zIndex,\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 0,\r\n                filter: 'alpha(opacity=0)',\r\n                'background-color': '#000'\r\n            })\r\n            .data('contextMenuRoot', menuData)\r\n            .insertBefore(this);\r\n\r\n        menuData.listeners.layer = new ContextMenuEventListener($layer.get(0), menuData);\r\n        menuData.listeners.layer\r\n            .on('contextmenu', menuData.manager.handler.abortevent)\r\n            .on('mousedown', menuData.manager.handler.layerClick);\r\n\r\n        // IE6 doesn't know position:fixed;\r\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\r\n            $layer.css({\r\n                'position': 'absolute',\r\n                'height': $(document).height()\r\n            });\r\n        }\r\n\r\n        return $layer;\r\n    }\r\n\r\n    /**\r\n     * Process submenu promise.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} currentMenuData\r\n     * @param {ContextMenuData} rootMenuData\r\n     * @param {Promise} promise\r\n     */\r\n    processPromises(e, currentMenuData, rootMenuData, promise) {\r\n        // Start\r\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\r\n\r\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\r\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\r\n                return;\r\n            }\r\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\r\n            currentMenuData.items = items;\r\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\r\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\r\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\r\n        }\r\n\r\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\r\n            // User called promise.reject() with an error item, if not, provide own error item.\r\n            if (typeof errorItem === 'undefined') {\r\n                errorItem = {\r\n                    'error': {\r\n                        name: 'No items and no error item',\r\n                        icon: 'context-menu-icon context-menu-icon-quit'\r\n                    }\r\n                };\r\n                if (window.console) {\r\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\r\n                }\r\n            } else if (typeof errorItem === 'string') {\r\n                errorItem = {'error': {name: errorItem}};\r\n            }\r\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\r\n        }\r\n\r\n        function completedPromise(currentMenuData, rootMenuData, items) {\r\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\r\n            // be used to create the rest of the context menu.\r\n            if (typeof items === 'undefined') {\r\n                // Null result, dev should have checked\r\n                errorPromise(undefined); // own error object\r\n            }\r\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\r\n        }\r\n\r\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\r\n        // and rootMenuData to avoid scope problems\r\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\r\n    }\r\n\r\n    /**\r\n     * Operation that will run after contextMenu showed on screen.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @return {undefined}\r\n     */\r\n    activated(e, menuData) {\r\n        const $menu = menuData.$menu;\r\n        const $menuOffset = $menu.offset();\r\n        const winHeight = $(window).height();\r\n        const winScrollTop = $(window).scrollTop();\r\n        const menuHeight = $menu.height();\r\n        if (menuHeight > winHeight) {\r\n            $menu.css({\r\n                'height': winHeight + 'px',\r\n                'overflow-x': 'hidden',\r\n                'overflow-y': 'auto',\r\n                'top': winScrollTop + 'px'\r\n            });\r\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\r\n            $menu.css({\r\n                'top': '0px'\r\n            });\r\n        }\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","/**\r\n * Determine the position for a root menu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#determinePosition\r\n * @param {(JQuery)} $menu\r\n */\r\nexport function determinePosition($menu) {\r\n    // position to the lower middle of the trigger element\r\n    if ($.ui && $.ui.position) {\r\n        // .position() is provided as a jQuery UI utility\r\n        // (...and it won't work on hidden elements)\r\n        $menu.css('display', 'block').position({\r\n            my: 'center top',\r\n            at: 'center bottom',\r\n            of: this,\r\n            offset: '0 5',\r\n            collision: 'fit'\r\n        }).css('display', 'none');\r\n    } else {\r\n        // determine contextMenu position\r\n        const offset = this.offset();\r\n        offset.top += this.outerHeight();\r\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\r\n        $menu.css(offset);\r\n    }\r\n}\r\n\r\n/**\r\n * Position the root menu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#position\r\n * @param {JQuery.Event} e\r\n * @param {ContextMenuData} currentMenuData\r\n * @param {(number|string)} x\r\n * @param {(number|string)} y\r\n */\r\nexport function position(e, currentMenuData, x, y) {\r\n    const $window = $(window);\r\n    let offset;\r\n    // determine contextMenu position\r\n    if (!x && !y) {\r\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\r\n        return;\r\n    } else if (x === 'maintain' && y === 'maintain') {\r\n        // x and y must not be changed (after re-show on command click)\r\n        offset = currentMenuData.$menu.position();\r\n    } else {\r\n        // x and y are given (by mouse event)\r\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\r\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\r\n    }\r\n\r\n    // correct offset if viewport demands it\r\n    const bottom = $window.scrollTop() + $window.height();\r\n    const right = $window.scrollLeft() + $window.width();\r\n    const height = currentMenuData.$menu.outerHeight();\r\n    const width = currentMenuData.$menu.outerWidth();\r\n\r\n    if (offset.top + height > bottom) {\r\n        offset.top -= height;\r\n    }\r\n\r\n    if (offset.top < 0) {\r\n        offset.top = 0;\r\n    }\r\n\r\n    if (offset.left + width > right) {\r\n        offset.left -= width;\r\n    }\r\n\r\n    if (offset.left < 0) {\r\n        offset.left = 0;\r\n    }\r\n\r\n    currentMenuData.$menu.css(offset);\r\n}\r\n\r\n/**\r\n * Position a submenu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#positionSubmenu\r\n * @param {JQuery.Event} e\r\n * @param {JQuery} $menu\r\n */\r\n// position the sub-menu\r\nexport function positionSubmenu(e, $menu) {\r\n    if (typeof $menu === 'undefined') {\r\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\r\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\r\n        // call positionSubmenu after promise is completed.\r\n        return;\r\n    }\r\n    if ($.ui && $.ui.position) {\r\n        // .position() is provided as a jQuery UI utility\r\n        // (...and it won't work on hidden elements)\r\n        $menu.css('display', 'block').position({\r\n            my: 'left top-5',\r\n            at: 'right top',\r\n            of: this,\r\n            collision: 'flipfit fit'\r\n        }).css('display', '');\r\n    } else {\r\n        // determine contextMenu position\r\n        const offset = {\r\n            top: -9,\r\n            left: this.outerWidth() - 5\r\n        };\r\n        $menu.css(offset);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\r\n * @class ContextMenuHtml5Builder\r\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\r\n\r\n ```\r\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\r\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\r\n    <command label=\"resize\" onclick=\"alert('resize')\">\r\n    <menu label=\"share\">\r\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\r\n        <hr>\r\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\r\n    </menu>\r\n </menu>\r\n ```\r\n\r\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\r\n\r\n ```\r\n <menu>\r\n <hr>\r\n <a>\r\n <command type=\"command|radio|checkbox\"> (W3C Specification)\r\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\r\n <input type=\"text|radio|checkbox\">\r\n <select>\r\n <textarea>\r\n <label for=\"someId\">\r\n <label> the text <input|textarea|select>\r\n ```\r\n\r\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\r\n\r\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\r\n\r\n ## HTML5 `<menu>` shiv/polyfill\r\n\r\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\r\n\r\n ```\r\n $(function(){\r\n    $.contextMenu(\"html5\");\r\n });\r\n ```\r\n\r\n Engaging the HTML5 polyfill (ignoring browser native implementation):\r\n\r\n ```\r\n $(function(){\r\n    $.contextMenu(\"html5\", true);\r\n });\r\n ```\r\n\r\n */\r\nexport default class ContextMenuHtml5Builder {\r\n    /**\r\n     * Get the input label for the given node.\r\n     *\r\n     * @method inputLabel\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {HTMLElement} node - Html element\r\n     * @returns {string|JQuery|jQuery} - Input label element\r\n     */\r\n    inputLabel(node) {\r\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\r\n    }\r\n\r\n    /**\r\n     * Helper function to build ContextMenuItems from an html5 menu element.\r\n     *\r\n     * @method fromMenu\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {JQuery|string} element - Menu element to generate the menu from.\r\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\r\n     */\r\n    fromMenu(element) {\r\n        const $this = $(element);\r\n        const items = {};\r\n\r\n        this.build(items, $this.children());\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Helper function for building a menu from a HTML menu element.\r\n     *\r\n     * @method build\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\r\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\r\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\r\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\r\n     */\r\n    build(items, $children, counter) {\r\n        if (!counter) {\r\n            counter = 0;\r\n        }\r\n\r\n        let builder = this;\r\n\r\n        $children.each(function () {\r\n            let $node = $(this);\r\n            let node = this;\r\n            let nodeName = this.nodeName.toLowerCase();\r\n            let label;\r\n            let item;\r\n\r\n            // extract <label><input>\r\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\r\n                label = $node.text();\r\n                $node = $node.children().first();\r\n                node = $node.get(0);\r\n                nodeName = node.nodeName.toLowerCase();\r\n            }\r\n\r\n            /*\r\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\r\n             * Not being the sadistic kind, $.contextMenu only accepts:\r\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\r\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\r\n             */\r\n\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\r\n            switch (nodeName) {\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\r\n                case 'menu':\r\n                    item = {name: $node.attr('label'), items: {}};\r\n                    counter = builder.build(item.items, $node.children(), counter);\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\r\n                case 'a':\r\n                case 'button':\r\n                    item = {\r\n                        name: $node.text(),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        callback: (function () {\r\n                            return function () {\r\n                                $node.get(0).click();\r\n                            };\r\n                        })()\r\n                    };\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\r\n                case 'menuitem':\r\n                case 'command':\r\n                    switch ($node.attr('type')) {\r\n                        case undefined:\r\n                        case 'command':\r\n                        case 'menuitem':\r\n                            item = {\r\n                                name: $node.attr('label'),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                icon: $node.attr('icon'),\r\n                                callback: (function () {\r\n                                    return function () {\r\n                                        $node.get(0).click();\r\n                                    };\r\n                                })()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                radio: $node.attr('radiogroup'),\r\n                                value: $node.attr('id'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                    }\r\n                    break;\r\n\r\n                case 'hr':\r\n                    item = '-------';\r\n                    break;\r\n\r\n                case 'input':\r\n                    switch ($node.attr('type')) {\r\n                        case 'text':\r\n                            item = {\r\n                                type: 'text',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                value: $node.val()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                radio: !!$node.attr('name'),\r\n                                value: $node.val(),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case 'select':\r\n                    item = {\r\n                        type: 'select',\r\n                        name: label || builder.inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        selected: $node.val(),\r\n                        options: {}\r\n                    };\r\n                    $node.children().each(function () {\r\n                        item.options[this.value] = $(this).text();\r\n                    });\r\n                    break;\r\n\r\n                case 'textarea':\r\n                    item = {\r\n                        type: 'textarea',\r\n                        name: label || builder.inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        value: $node.val()\r\n                    };\r\n                    break;\r\n\r\n                case 'label':\r\n                    break;\r\n\r\n                default:\r\n                    item = {type: 'html', html: $node.clone(true)};\r\n                    break;\r\n            }\r\n\r\n            if (item) {\r\n                counter++;\r\n                items['key' + counter] = item;\r\n            }\r\n        });\r\n\r\n        return counter;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\r\nimport ContextMenuEventListener from './ContextMenuEventListener'\r\n\r\n/**\r\n * @typedef {jQuery.Event} ContextMenuEvent\r\n * @augments jQuery.Event\r\n * @property {ContextMenuData} _contextMenuData\r\n */\r\n\r\nexport default class ContextMenuEventHandler {\r\n    /**\r\n     * @constructs ContextMenuEventHandler\r\n     * @constructor\r\n     * @property {?JQuery} $currentTrigger\r\n     * @property {Object} hoveract\r\n     */\r\n    constructor() {\r\n        this.$currentTrigger = null;\r\n        this.hoveract = {};\r\n    }\r\n\r\n    /**\r\n     * Helper to abort an event\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    abortevent(e) {\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    contextmenu(e) {\r\n        const $this = $(this);\r\n\r\n        if (!e._contextMenuData) {\r\n            throw new Error('No data attached');\r\n        }\r\n\r\n        // disable actual context-menu if we are using the right mouse button as the trigger\r\n        if (e._contextMenuData.trigger === 'right') {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        // abort native-triggered events unless we're triggering on right click\r\n        if ((e._contextMenuData.trigger !== 'right' && e._contextMenuData.trigger !== 'demand') && e.originalEvent) {\r\n            return;\r\n        }\r\n\r\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\r\n        if (typeof e.mouseButton !== 'undefined') {\r\n            if (!(e._contextMenuData.trigger === 'left' && e.mouseButton === 0) && !(e._contextMenuData.trigger === 'right' && e.mouseButton === 2)) {\r\n                // Mouse click is not valid.\r\n                return;\r\n            }\r\n        }\r\n\r\n        // abort event if menu is visible for this trigger\r\n        if ($this.hasClass('context-menu-active')) {\r\n            return;\r\n        }\r\n\r\n        if (!$this.hasClass('context-menu-disabled')) {\r\n            // theoretically need to fire a show event at <menu>\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\r\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\r\n            // e._contextMenuData.$menu.trigger(evt);\r\n\r\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\r\n            if (e._contextMenuData.build) {\r\n                const built = e._contextMenuData.build(e, $this);\r\n                // abort if build() returned false\r\n                if (built === false) {\r\n                    return;\r\n                }\r\n\r\n                // dynamically build menu on invocation\r\n                e._contextMenuData = $.extend(true, {}, defaults, e._contextMenuData, built || {});\r\n\r\n                // abort if there are no items to display\r\n                if (!e._contextMenuData.items || $.isEmptyObject(e._contextMenuData.items)) {\r\n                    // Note: jQuery captures and ignores errors from event handlers\r\n                    if (window.console) {\r\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\r\n                    }\r\n\r\n                    throw new Error('No Items specified');\r\n                }\r\n\r\n                // backreference for custom command type creation\r\n                e._contextMenuData.$trigger = e._contextMenuData.manager.handler.$currentTrigger;\r\n\r\n                e._contextMenuData.manager.operations.create(e, e._contextMenuData);\r\n            }\r\n            let showMenu = false;\r\n\r\n            Object.keys(e._contextMenuData.items).forEach((key) => {\r\n                let visible;\r\n                if (typeof e._contextMenuData.items[key].visible === 'function') {\r\n                    visible = e._contextMenuData.items[key].visible.call($this, e, key, e._contextMenuData, e._contextMenuData);\r\n                } else if (typeof e._contextMenuData.items[key].visible !== 'undefined') {\r\n                    visible = e._contextMenuData.items[key].visible === true;\r\n                } else {\r\n                    visible = true;\r\n                }\r\n                if (visible) {\r\n                    showMenu = true;\r\n                }\r\n            });\r\n\r\n            if (showMenu) {\r\n                // show menu\r\n                e._contextMenuData.manager.operations.show.call($this, e, e._contextMenuData, e.pageX, e.pageY);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    click(e) {\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n        e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mousedown(e) {\r\n        // register mouse down\r\n        const $this = $(this);\r\n\r\n        // hide any previous menus\r\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && !e._contextMenuData.manager.handler.$currentTrigger.is($this)) {\r\n            e._contextMenuData.manager.triggerEvent(e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu').$menu.get(0), 'contextmenu', {data: e._contextMenuData, originalEvent: e});\r\n        }\r\n\r\n        // activate on right click\r\n        if (e.button === 2) {\r\n            e._contextMenuData.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseup(e) {\r\n        // show menu\r\n        const $this = $(this);\r\n        if ($this.data('contextMenuActive') && e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length && e._contextMenuData.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\r\n            e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {data: e._contextMenuData, pageX: e.pageX, pageY: e.pageY, originalEvent: e});\r\n        }\r\n\r\n        $this.removeData('contextMenuActive');\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseenter(e) {\r\n        const $this = $(this);\r\n        const $related = $(e.relatedTarget);\r\n\r\n        // abort if we're coming from a menu\r\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n            return;\r\n        }\r\n\r\n        // abort if a menu is shown\r\n        if (e._contextMenuData.manager.handler.$currentTrigger && e._contextMenuData.manager.handler.$currentTrigger.length) {\r\n            return;\r\n        }\r\n\r\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\r\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\r\n        e._contextMenuData.manager.handler.hoveract.data = e._contextMenuData;\r\n        let eventListener = new ContextMenuEventListener(document, e._contextMenuData);\r\n        eventListener.on('mousemove', e._contextMenuData.manager.handler.mousemove);\r\n        e._contextMenuData.manager.handler.hoveract.timer = setTimeout(() => {\r\n            e._contextMenuData.manager.handler.hoveract.timer = null;\r\n            eventListener.off('mousemove');\r\n            eventListener.destruct();\r\n            eventListener = null;\r\n            e._contextMenuData.manager.handler.$currentTrigger = $this;\r\n            e._contextMenuData.manager.triggerEvent(this, 'contextmenu', {\r\n                data: e._contextMenuData.manager.handler.hoveract.data,\r\n                pageX: e._contextMenuData.manager.handler.hoveract.pageX,\r\n                pageY: e._contextMenuData.manager.handler.hoveract.pageY\r\n            });\r\n        }, e._contextMenuData.delay);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mousemove(e) {\r\n        e._contextMenuData.manager.handler.hoveract.pageX = e.pageX;\r\n        e._contextMenuData.manager.handler.hoveract.pageY = e.pageY;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseleave(e) {\r\n        // abort if we're leaving for a menu\r\n        const $related = $(e.relatedTarget);\r\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            clearTimeout(e._contextMenuData.manager.handler.hoveract.timer);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        e._contextMenuData.manager.handler.hoveract.timer = null;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    layerClick(e) {\r\n        /** @var ContextMenuData **/\r\n        let root = e._contextMenuData;\r\n\r\n        if (root === null || typeof root === 'undefined') {\r\n            throw new Error('No ContextMenuData found');\r\n        }\r\n\r\n        let button = e.button;\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        let target;\r\n        let offset;\r\n\r\n        e.preventDefault();\r\n\r\n        setTimeout(() => {\r\n            let $window = $(window);\r\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\r\n\r\n            // find the element that would've been clicked, wasn't the layer in the way\r\n            if (document.elementFromPoint && root.$layer) {\r\n                root.$layer.hide();\r\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\r\n\r\n                // also need to try and focus this element if we're in a contenteditable area,\r\n                // as the layer will prevent the browser mouse action we want\r\n                if (target.isContentEditable) {\r\n                    const range = document.createRange();\r\n                    const sel = window.getSelection();\r\n                    range.selectNode(target);\r\n                    range.collapse(true);\r\n                    sel.removeAllRanges();\r\n                    sel.addRange(range);\r\n                }\r\n                root.manager.triggerEvent(target, e);\r\n                root.$layer.show();\r\n            }\r\n\r\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\r\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\r\n                return;\r\n            }\r\n\r\n            if (root.reposition && triggerAction) {\r\n                if (document.elementFromPoint) {\r\n                    if (root.$trigger.is(target)) {\r\n                        root.position.call(root.$trigger, e, root, x, y);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    offset = root.$trigger.offset();\r\n                    const $window = $(window);\r\n                    // while this looks kinda awful, it's the best way to avoid\r\n                    // unnecessarily calculating any positions\r\n                    offset.top += $window.scrollTop();\r\n                    if (offset.top <= e.pageY) {\r\n                        offset.left += $window.scrollLeft();\r\n                        if (offset.left <= e.pageX) {\r\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\r\n                            if (offset.bottom >= e.pageY) {\r\n                                offset.right = offset.left + root.$trigger.outerWidth();\r\n                                if (offset.right >= e.pageX) {\r\n                                    // reposition\r\n                                    root.position.call(root.$trigger, e, root, x, y);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (target && triggerAction) {\r\n                root.$trigger.one('contextmenu:hidden', () => {\r\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\r\n                });\r\n            }\r\n\r\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\r\n                root.manager.triggerEvent(root.$menu.get(0), 'contextmenu:hide', {data: root, originalEvent: e});\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     * @param {ContextMenuItem} currentMenuData\r\n     */\r\n    keyStop(e, currentMenuData) {\r\n        if (!currentMenuData.isInput) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    key(e) {\r\n        let rootMenuData = {};\r\n\r\n        // Only get the data from this.$currentTrigger if it exists\r\n        if (e._contextMenuData.manager.handler.$currentTrigger) {\r\n            rootMenuData = e._contextMenuData.manager.handler.$currentTrigger.data('contextMenu') || {};\r\n        }\r\n        // If the trigger happen on a element that are above the contextmenu do this\r\n        if (typeof rootMenuData.zIndex === 'undefined') {\r\n            rootMenuData.zIndex = 0;\r\n        }\r\n        const getZIndexOfTriggerTarget = (target) => {\r\n            if (target.style.zIndex !== '') {\r\n                return target.style.zIndex;\r\n            } else {\r\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\r\n                    return getZIndexOfTriggerTarget(target.offsetParent);\r\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\r\n                    return getZIndexOfTriggerTarget(target.parentElement);\r\n                }\r\n            }\r\n        };\r\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\r\n\r\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\r\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\r\n        // and its above the contextmenu it wont steal keys events\r\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\r\n            return;\r\n        }\r\n        switch (e.keyCode) {\r\n            case 9:\r\n            case 38: // up\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\r\n                if (rootMenuData.isInput) {\r\n                    if (e.keyCode === 9 && e.shiftKey) {\r\n                        e.preventDefault();\r\n                        if (rootMenuData.$selected) {\r\n                            rootMenuData.$selected.find('input, textarea, select').blur();\r\n                        }\r\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\r\n                        }\r\n                        return;\r\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                        // checkboxes don't capture this key\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                } else if (e.keyCode !== 9 || e.shiftKey) {\r\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'prevcommand', {data: rootMenuData, originalEvent: e});\r\n                    }\r\n                    return;\r\n                }\r\n                break;\r\n            // omitting break;\r\n            // case 9: // tab - reached through omitted break;\r\n            case 40: // down\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput) {\r\n                    if (e.keyCode === 9) {\r\n                        e.preventDefault();\r\n                        if (rootMenuData.$selected) {\r\n                            rootMenuData.$selected.find('input, textarea, select').blur();\r\n                        }\r\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\r\n                        }\r\n                        return;\r\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                        // checkboxes don't capture this key\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                } else {\r\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                        rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'nextcommand', {data: rootMenuData, originalEvent: e});\r\n                    }\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 37: // left\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\r\n                    break;\r\n                }\r\n\r\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\r\n                    const $parent = rootMenuData.$selected.parent().parent();\r\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\r\n                    rootMenuData.$selected = $parent;\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 39: // right\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\r\n                    break;\r\n                }\r\n\r\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\r\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\r\n                    rootMenuData.$selected = null;\r\n                    itemdata.$selected = null;\r\n                    rootMenuData.manager.triggerEvent(itemdata.$menu.get(0), 'nextcommand', {data: itemdata, originalEvent: e});\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 35: // end\r\n            case 36: // home\r\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\r\n                    break;\r\n                } else {\r\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\r\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\r\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\r\n                    // @todo weird event?\r\n                    e.preventDefault();\r\n                    break;\r\n                }\r\n            case 13: // enter\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput) {\r\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n                    rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'mouseup', {data: rootMenuData, originalEvent: e});\r\n                }\r\n                return;\r\n            case 32: // space\r\n            case 33: // page up\r\n            case 34: // page down\r\n                // prevent browser from scrolling down while menu is visible\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                return;\r\n\r\n            case 27: // esc\r\n                e._contextMenuData.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                    rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide', {data: rootMenuData, originalEvent: e});\r\n                }\r\n                return;\r\n\r\n            default: // 0-9, a-z\r\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\r\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\r\n                    // according to the specs accesskeys must be invoked immediately\r\n                    let eventName = rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup';\r\n                    rootMenuData.manager.triggerEvent(rootMenuData.accesskeys[k].$node.get(0), eventName, {data: rootMenuData, originalEvent: e});\r\n\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        // pass event to selected item,\r\n        // stop propagation to avoid endless recursion\r\n        e.stopPropagation();\r\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n            rootMenuData.$selected.get(0).dispatchEvent(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    prevItem(e) {\r\n        e.stopPropagation();\r\n        let currentMenuData = $(this).data('contextMenu') || {};\r\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\r\n\r\n        // obtain currently selected menu\r\n        if (currentMenuData.$selected) {\r\n            const $s = currentMenuData.$selected;\r\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\r\n            currentMenuData.$selected = $s;\r\n        }\r\n\r\n        const $children = currentMenuData.$menu.children();\r\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\r\n        const $round = $prev;\r\n\r\n        // skip disabled or hidden elements\r\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\r\n            if ($prev.prev().length) {\r\n                $prev = $prev.prev();\r\n            } else {\r\n                $prev = $children.last();\r\n            }\r\n\r\n            if ($prev.is($round)) {\r\n                // break endless loop\r\n                return;\r\n            }\r\n        }\r\n\r\n        // leave current\r\n        if (currentMenuData.$selected) {\r\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\r\n        }\r\n\r\n        // activate next\r\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\r\n\r\n        // focus input\r\n        const $input = $prev.find('input, textarea, select');\r\n        if ($input.length) {\r\n            $input.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    nextItem(e) {\r\n        e.stopPropagation();\r\n        let currentMenuData = $(this).data('contextMenu') || {};\r\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\r\n\r\n        // obtain currently selected menu\r\n        if (currentMenuData.$selected) {\r\n            const $s = currentMenuData.$selected;\r\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\r\n            currentMenuData.$selected = $s;\r\n        }\r\n\r\n        const $children = currentMenuData.$menu.children();\r\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\r\n        const $round = $next;\r\n\r\n        // skip disabled\r\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\r\n            if ($next.next().length) {\r\n                $next = $next.next();\r\n            } else {\r\n                $next = $children.first();\r\n            }\r\n            if ($next.is($round)) {\r\n                // break endless loop\r\n                return;\r\n            }\r\n        }\r\n\r\n        // leave current\r\n        if (currentMenuData.$selected) {\r\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\r\n        }\r\n\r\n        // activate next\r\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\r\n\r\n        // focus input\r\n        const $input = $next.find('input, textarea, select');\r\n        if ($input.length) {\r\n            $input.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    focusInput(e) {\r\n        let $this = $(this).closest('.context-menu-item');\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.$selected = currentMenuData.$selected = $this;\r\n        rootMenuData.isInput = currentMenuData.isInput = true;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    blurInput(e) {\r\n        let $this = $(this).closest('.context-menu-item');\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.isInput = currentMenuData.isInput = false;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    menuMouseenter(e) {\r\n        let root = e._contextMenuData;\r\n        root.hovering = true;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    menuMouseleave(e) {\r\n        let root = e._contextMenuData;\r\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\r\n            root.hovering = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemMouseenter(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.hovering = true;\r\n\r\n        // abort if we're re-entering\r\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        // make sure only one item is selected\r\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\r\n        // @todo trigger?\r\n        let children = targetMenu.$menu\r\n            .children('.' + rootMenuData.classNames.hover);\r\n\r\n        children.each((i, e) => {\r\n            console.log('Blur itemMouseenter');\r\n            rootMenuData.manager.triggerEvent(e, 'contextmenu:blur', {data: targetMenu, originalEvent: e}, false);\r\n        });\r\n\r\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\r\n            currentMenuData.$selected = null;\r\n            return;\r\n        }\r\n\r\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:focus', {data: currentMenuData, originalEvent: e});\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemMouseleave(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\r\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n                console.log('blur itemmouseleave');\r\n                rootMenuData.manager.triggerEvent(rootMenuData.$selected.get(0), 'contextmenu:blur', {data: rootMenuData, originalEvent: e});\r\n            }\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\r\n            return;\r\n        }\r\n\r\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\r\n            return;\r\n        }\r\n\r\n        console.log('blur itemmouseleave 2');\r\n        rootMenuData.manager.triggerEvent(this, 'contextmenu:blur', {data: currentMenuData}, false);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemClick(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n        let key = data.contextMenuKey;\r\n        let callback;\r\n\r\n        // abort if the key is unknown or disabled or is a menu\r\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n\r\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\r\n            // item-specific callback\r\n            callback = currentMenuData.callbacks[key];\r\n        } else if (typeof rootMenuData.callback === 'function') {\r\n            // default callback\r\n            callback = rootMenuData.callback;\r\n        } else {\r\n            // no callback, no action\r\n            return;\r\n        }\r\n\r\n        // hide menu if callback doesn't stop that\r\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\r\n            rootMenuData.manager.triggerEvent(rootMenuData.$menu.get(0), 'contextmenu:hide');\r\n        } else if (rootMenuData.$menu.parent().length) {\r\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    inputClick(e) {\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     * @param {Object} data\r\n     */\r\n    hideMenu(e, data) {\r\n        const root = $(this).data('contextMenuRoot');\r\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    focusItem(e) {\r\n        e.stopPropagation();\r\n        const $this = $(this);\r\n        const data = $this.data();\r\n        const currentMenuData = data.contextMenu;\r\n        const rootMenuData = data.contextMenuRoot;\r\n\r\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\r\n            return;\r\n        }\r\n\r\n        let $element = $this\r\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\r\n            // select other items and included items\r\n            .parent()\r\n            .find('.context-menu-item')\r\n            .not($this)\r\n            .removeClass(rootMenuData.classNames.visible)\r\n            .filter('.' + rootMenuData.classNames.hover);\r\n\r\n        if ($element.length > 0) {\r\n            $element.each(function (i, e) {\r\n                console.log('blur focusitem ');\r\n                rootMenuData.manager.triggerEvent(e, 'contextmenu:blur', {data: currentMenuData}, false);\r\n            });\r\n        }\r\n\r\n        // remember selected\r\n        currentMenuData.$selected = rootMenuData.$selected = $this;\r\n\r\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\r\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\r\n        }\r\n\r\n        // position sub-menu - do after show so dumb $.ui.position can keep up\r\n        if (currentMenuData.$node) {\r\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    blurItem(e) {\r\n        console.log('bluritem', this);\r\n        e.stopPropagation();\r\n        const $this = $(this);\r\n        const data = $this.data();\r\n        const currentMenuData = data.contextMenu;\r\n        const rootMenuData = data.contextMenuRoot;\r\n\r\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\r\n            $this.removeClass(rootMenuData.classNames.visible);\r\n        }\r\n        $this.removeClass(rootMenuData.classNames.hover);\r\n        currentMenuData.$selected = null;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\r\n * The jQuery plugin namespace.\r\n * @external \"jQuery.fn\"\r\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\r\n */\r\n\r\n/**\r\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\r\n *\r\n * @instance\r\n * @function external:jQuery.fn.contextmenu\r\n *\r\n * @param {(string|Object)} operation\r\n * @returns {JQuery}\r\n */\r\nexport default function (operation) {\r\n    const $t = this;\r\n    const $o = operation;\r\n    if ($t.length > 0) { // this is not a build on demand menu\r\n        if (typeof operation === 'undefined') {\r\n            $t.first().trigger('contextmenu');\r\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\r\n            $t.first().trigger($.Event('contextmenu', {\r\n                pageX: operation.x,\r\n                pageY: operation.y,\r\n                mouseButton: operation.button\r\n            }));\r\n        } else if (operation === 'hide') {\r\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\r\n            if ($menu) {\r\n                $menu.trigger('contextmenu:hide');\r\n            }\r\n        } else if (operation === 'destroy') {\r\n            $.contextMenu('destroy', {context: this});\r\n        } else if (operation === 'update') {\r\n            $.contextMenu('update', {context: this});\r\n        } else if ($.isPlainObject(operation)) {\r\n            operation.context = this;\r\n            $.contextMenu('create', operation);\r\n        } else if (operation === true) {\r\n            $t.removeClass('context-menu-disabled');\r\n        } else if (operation === false) {\r\n            $t.addClass('context-menu-disabled');\r\n        }\r\n    } else {\r\n        // eslint-disable-next-line no-undef\r\n        $.each($.contextMenu.menus, function () {\r\n            if (this.selector === $t.selector) {\r\n                $o.data = this;\r\n\r\n                $.extend($o.data, {trigger: 'demand'});\r\n            }\r\n        });\r\n\r\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\r\n    }\r\n\r\n    return this;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}